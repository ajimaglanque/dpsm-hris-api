openapi: '3.0.0'
info:
  title: 'UPM DPSM HRIS'
  version: '1.0.0'
  description: >-
    Human Resource Information System for the University of the Philippines Manila Department of Physical Sciences and Mathematics.

paths:
  "/api/health":
    get:
      tags:
      - Monitor Health

      operationId: monitorHealth
      summary: Get health status of app
      description: Get health status of app
      responses:
        default:
          description: Health check response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Server is up!"

  "/api/user/add":
    post:
      summary: Create new user
      tags:
      - User Enrollment
      description: Register user
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/definitions/userAddSource"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    result:
                      type: string
                      example: "User enrolled successfully"
                    
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"

  "/api/token":
    post:
      summary: Create access token 
      tags:
      - Access Token
      description: Get access token
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/definitions/accessTokenSource"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    result:
                      type: string
                      example: "xxxxxxxxxxxxxxxxxxxxx.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
                    
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
  
  "/api/faculty":
    get:
      summary: Get list of faculty
      tags:
      - Faculty - Basic Information
      description: Summary of faculty employee information
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    result:
                      type: array
                      example: 
                        [
                          {
                              "unitId": 1,
                              "unit": "Chemistry",
                              "faculty_units": [
                                  {
                                      "facultyId": 1,
                                      "faculty_personal_info": {
                                          "lastName": "Cristobal",
                                          "firstName": "Jodie",
                                          "middleName": "Pacay"
                                      }
                                  },
                                  {
                                      "facultyId": 2,
                                      "faculty_personal_info": {
                                          "lastName": "Palomar",
                                          "firstName": "Matthew",
                                          "middleName": "Pacay"
                                      }
                                  }
                              ]
                          },
                          {
                              "unitId": 2,
                              "unit": "Mathematical and Computing Sciences",
                              "faculty_units": [
                                  {
                                      "facultyId": 4,
                                      "faculty_personal_info": {
                                          "lastName": "Cristobal",
                                          "firstName": "Diane",
                                          "middleName": "Pacay"
                                      }
                                  },
                                  {
                                      "facultyId": 5,
                                      "faculty_personal_info": {
                                          "lastName": "Cristobal",
                                          "firstName": "Kenneth",
                                          "middleName": "Pacay"
                                      }
                                  }
                              ]
                          },
                          {
                              "unitId": 3,
                              "unit": "Physics and Geology",
                              "faculty_units": [
                                  {
                                      "facultyId": 6,
                                      "faculty_personal_info": {
                                          "lastName": "Cristobal",
                                          "firstName": "Lee",
                                          "middleName": "Pacay"
                                      }
                                  },
                                  {
                                      "facultyId": 8,
                                      "faculty_personal_info": {
                                          "lastName": "Palomar",
                                          "firstName": "Diane",
                                          "middleName": "Pacay"
                                      }
                                  }
                              ]
                          }
                      ]
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  
  "/api/faculty/all":
    get:
      summary: Get complete information of all faculty
      tags:
      - Faculty - Basic Information
      description: Get all faculty information
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    result:
                      type: array
                      example: 
                        [
                          {
                            "facultyId": 4,
                            "lastName": "Cristobal",
                            "firstName": "Jodie",
                            "middleName": "Pacay",
                            "dateOfBirth": "1994-01-06",
                            "placeOfBirth": "Manila",
                            "gender": "female",
                            "permanentAddress": "037 R. Higgins St., Brgy. 185, Pasay City",
                            "presentAddress": "037 R. Higgins St., Brgy. 185, Pasay City",
                            "mobile": "09123456789",
                            "landline": "88161461",
                            "email": "jodie@email4.com",
                            "civilStatus": "single",
                            "religion": "Catholic",
                            "emergencyContactPerson": "Hilda Cristobal",
                            "emergencyContactNumber": "09123456789",
                            "faculty_employment_infos": [
                                {
                                    "position": "Prof 2",
                                    "startDate": "2004-01-06",
                                    "endDate": "2019-11-06",
                                    "faculty_unit": {
                                        "unit": "Mathematical and Computing Sciences"
                                    }
                                }
                            ],
                            "faculty_education_infos": [],
                            "faculty_publications": [
                                {
                                    "publication": "publication",
                                    "publicationDate": "2019-11-06"
                                }
                            ],
                            "faculty_work_exp_infos": []
                        },
                        {
                            "facultyId": 8,
                            "lastName": "Cristobal",
                            "firstName": "Lee",
                            "middleName": "Pacay",
                            "dateOfBirth": "1994-01-06",
                            "placeOfBirth": "Manila",
                            "gender": "female",
                            "permanentAddress": "037 R. Higgins St., Brgy. 185, Pasay City",
                            "presentAddress": "037 R. Higgins St., Brgy. 185, Pasay City",
                            "mobile": "09123456789",
                            "landline": "88161461",
                            "email": "jodie@email7.com",
                            "civilStatus": "single",
                            "religion": "Catholic",
                            "emergencyContactPerson": "Hilda Cristobal",
                            "emergencyContactNumber": "09123456789",
                            "faculty_employment_infos": [],
                            "faculty_education_infos": [],
                            "faculty_publications": [],
                            "faculty_work_exp_infos": []
                        }
                      ]
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  
  "/api/faculty/add/personal":
    post:
      summary: Add faculty personal info
      tags:
      - Faculty - Basic Information
      description: Add faculty personal info
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/definitions/addFacultyPersonalInfoSource"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Faculty added successfully"
                    result:
                      type: object
                      example: 
                        {
                          facultyId: "18"
                        }
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  
  "/api/faculty/{facultyId}":
    get:
      summary: Get faculty personal info
      tags:
      - Faculty - Basic Information
      description: Get faculty personal info
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
          - name: facultyId
            in: path
            description: Faculty ID
            required: true
            style: simple
            explode: false
            schema:
              type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    result:
                      type: object
                      example: 
                        {
                          "facultyId": 2,
                          "lastName": "Cristobal",
                          "firstName": "Bod",
                          "middleName": "Pacay",
                          "dateOfBirth": "1994-01-06",
                          "placeOfBirth": "Manila",
                          "gender": "female",
                          "permanentAddress": "037 R. Higgins St., Brgy. 185, Pasay City",
                          "presentAddress": "037 R. Higgins St., Brgy. 185, Pasay City",
                          "mobile": "09123456789",
                          "landline": "88161461",
                          "email": "jodie@email2.com",
                          "civilStatus": "single",
                          "religion": "Catholic",
                          "emergencyContactPerson": "Hilda Cristobal",
                          "emergencyContactNumber": "09123456789",
                          "createdAt": "2020-10-30T16:00:00.000Z",
                          "updatedAt": "2020-10-30T16:00:00.000Z"
                        }
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  
  "/api/faculty/edit/{facultyId}/personal":
    put:
      summary: Edit faculty personal info
      tags:
      - Faculty - Basic Information
      description: Edit faculty personal info
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
          - name: facultyId
            in: path
            description: Faculty ID
            required: true
            style: simple
            explode: false
            schema:
              type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/definitions/editFacultyPersonalInfoSource"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Faculty personal information updated successfully"
                    result:
                      type: object
                      example: 
                        {
                          facultyId: "18"
                        }
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  
  "/api/faculty/add/unit":
    post:
      summary: Add faculty unit
      tags:
      - Faculty - Basic Information
      description: Assign newly created faculty to a unit
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/definitions/addFacultyUnitSource"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Faculty unit information added successfully"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  
  "/api/faculty/add/employment":
    post:
      summary: Add faculty employment info
      tags:
      - Faculty - Basic Information
      description: Add faculty employment info
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/definitions/addFacultyEmploymentInfoSource"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Faculty employment information added successfully"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  
  "/api/faculty/{facultyId}/employment":
    get:
      summary: Get faculty employment info
      tags:
      - Faculty - Basic Information
      description: Get faculty employment info
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
          - name: facultyId
            in: path
            description: Faculty ID
            required: true
            style: simple
            explode: false
            schema:
              type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    result:
                      type: array
                      example: 
                        [
                          {
                            "startDate": "2004-01-06",
                            "endDate": null,
                            "faculty_employment_position": {
                                "employmentType": "ftt",
                                "position": "Instructor 1"
                            }
                          },
                          {
                            "startDate": "1994-01-06",
                            "endDate": "1995-01-06",
                            "faculty_employment_position": {
                                "employmentType": "ftp",
                                "position": "Associate Professor 3"
                            }
                          }
                        ]
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  
  "/api/faculty/add/education":
    post:
      summary: Add faculty education info
      tags:
      - Faculty - Basic Information
      description: Add faculty education info
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/definitions/addFacultyEducationInfoSource"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Faculty education information added successfully"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  
  "/api/faculty/{facultyId}/education":
    get:
      summary: Get faculty education info
      tags:
      - Faculty - Basic Information
      description: Get faculty education info
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
          - name: facultyId
            in: path
            description: Faculty ID
            required: true
            style: simple
            explode: false
            schema:
              type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    result:
                      type: array
                      example: 
                        [
                          {
                            "educInfoId": 4,
                            "institutionSchool": "UPM",
                            "degreeCert": "BS CS",
                            "majorSpecialization": "HI",
                            "startDate": "1994-01-06",
                            "endDate": "1994-01-06",
                            "proof": null,
                            "status": "ongoing",
                            "createdAt": "2020-11-02T19:48:15.000Z",
                            "updatedAt": "2020-11-02T19:48:15.000Z"
                          },
                          {
                            "educInfoId": 9,
                            "institutionSchool": "UPM",
                            "degreeCert": "BS AP",
                            "majorSpecialization": null,
                            "startDate": "1994-01-06",
                            "endDate": "1995-01-06",
                            "proof": "EOPOG2BJ01PZZITKDI9RTC1830APH6MNK9D.jpeg",
                            "status": "for verification",
                            "createdAt": "2020-11-13T07:30:20.000Z",
                            "updatedAt": "2020-11-13T20:30:13.000Z"
                          }
                        ]
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  
  "/api/faculty/edit/{facultyId}/education":
    put:
      summary: Edit faculty education info
      tags:
      - Faculty - Basic Information
      description: Edit faculty education info
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
          - name: facultyId
            in: path
            description: Faculty ID
            required: true
            style: simple
            explode: false
            schema:
              type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/definitions/editFacultyEducationInfoSource"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Faculty education information updated successfully"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  
  "/api/faculty/add/work-exp":
    post:
      summary: Add faculty work experience info
      tags:
      - Faculty - Basic Information
      description: Add faculty work experience info
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/definitions/addFacultyWorkExpInfoSource"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Faculty work experience information added successfully"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
 
  "/api/faculty/{facultyId}/work-exp":
    get:
      summary: Get faculty work experience info
      tags:
      - Faculty - Basic Information
      description: Get faculty work experience info
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
          - name: facultyId
            in: path
            description: Faculty ID
            required: true
            style: simple
            explode: false
            schema:
              type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    result:
                      type: array
                      example: 
                        [
                          {
                            "employerName": "University of the Philippines Diliman",
                            "startDate": "2014-01-06",
                            "endDate": "2019-11-06",
                            "position": "Professor 1",
                            "description": "Description"
                          },
                          {
                            "employerName": "University of the Philippines Manila",
                            "startDate": "2004-01-06",
                            "endDate": "2013-11-06",
                            "position": "Instructor 1",
                            "description": null
                          }
                        ]
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  
  "/api/faculty/add/publication":
    post:
      summary: Add faculty publication info
      tags:
      - Faculty - Accomplishments
      description: Add faculty publication info
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/definitions/addFacultyPublicationInfoSource"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Faculty publication information added successfully"
                    result:
                      type: object
                      example: 
                        {
                          publicationId: "4"
                        }
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  
  "/api/faculty/add/publisher":
    post:
      summary: Add faculty publisher info
      tags:
      - Faculty - Accomplishments
      description: Bulk add faculty publisher info
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              example:
                [
                  {
                    "facultyId": "9",
                    "publicationId": "4",
                    "status": "pending"
                  },
                  {
                    "facultyId": "10",
                    "publicationId": "4",
                    "status": "pending"
                  },
                  {
                    "facultyId": "11",
                    "publicationId": "4",
                    "status": "pending"
                  }
                ]
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Faculty publisher information added successfully"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  
  "/api/faculty/edit/{facultyId}/publisher":
    put:
      summary: Edit publisher info
      tags:
      - Faculty - Accomplishments
      description: Edit publisher info
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
          - name: facultyId
            in: path
            description: Faculty ID
            required: true
            style: simple
            explode: false
            schema:
              type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/definitions/editFacultyPublisherInfoSource"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Faculty publisher information updated successfully"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  
  "/api/faculty/add/training-seminar":
    post:
      summary: Add faculty training/seminar info
      tags:
      - Faculty - Accomplishments
      description: Add faculty training/seminar info
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/definitions/addFacultyTSInfoSource"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Faculty training/seminar information added successfully"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  
  "/api/faculty/{facultyId}/training-seminar":
    get:
      summary: Get faculty training/seminar info
      tags:
      - Faculty - Accomplishments
      description: Get faculty training/seminar info
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
          - name: facultyId
            in: path
            description: Faculty ID
            required: true
            style: simple
            explode: false
            schema:
              type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    result:
                      type: array
                      example: 
                        [
                          {
                            "tsId": 19,
                            "role": "Attendee",
                            "title": "MySQL Training",
                            "dateFrom": "2019-06-29",
                            "dateTo": "2019-06-27",
                            "venue": "UP ITDC",
                            "proof": "65KG9KD3A4OXQEQM0TEJJH1QGHP78D16FBW.jpeg",
                            "status": "For Verification"
                          },
                          {
                            "tsId": 18,
                            "role": "Speaker",
                            "title": "MySQL Training",
                            "dateFrom": "2019-06-28",
                            "dateTo": "2019-06-27",
                            "venue": "UP ITDC",
                            "proof": "TDWCCIZLOK0UAFX713LYM866P7G8AWQSWEL.jpeg",
                            "status": "For Verification"
                          }
                        ]
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  
  "/api/student/add/personal":
    post:
      summary: Add student personal info
      tags:
      - Student
      description: Add student personal info
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/definitions/addStudentPersonalInfoSource"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Student added successfully"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  
  "/api/alumni/add/personal":
    post:
      summary: Add alumni personal info
      tags:
      - Alumni
      description: Add alumni personal info
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/definitions/addAlumniPersonalInfoSource"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Alumni added successfully"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  
  "/api/alumni/add/work-exp":
    post:
      summary: Add alumni work experience info
      tags:
      - Alumni
      description: Add alumni work experience info
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/definitions/addAlumniWorkExpInfoSource"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Alumni work experience information added successfully"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  
  "/api/download/{filename}":
    get:
      summary: Download file
      tags:
      - Download
      description: Download file
      parameters:
          - name: filename
            in: path
            description: File Name
            required: true
            style: simple
            explode: false
            schema:
              type: string
      responses:
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  
definitions:
  userAddSource:
    properties:
        username:
          type: string
          example: "username"
        password:
          type: string
          example: "password"

  accessTokenSource:
    properties:
        username:
          type: string
          example: "username"
        password:
          type: string
          example: "password"

  addFacultyPersonalInfoSource:
    properties:
        lastName:
          type: string
          example: "Cristobal"
        firstName:
          type: string
          example: "Jodie"
        middleName:
          type: string
          example: "Pacay"
        dateOfBirth:
          type: string
          example: "1994-01-06"
        placeOfBirth:
          type: string
          example: "Manila"
        gender:
          type: string
          example: female
        permanentAddress:
          type: string
          example: "037 R. Higgins St., Brgy. 185, Pasay City"
        presentAddress:
          type: string
          example: "037 R. Higgins St., Brgy. 185, Pasay City"
        mobile:
          type: string
          example: "09123456789"
        landline:
          type: string
          example: "88161467"
        email:
          type: string
          example: "jodie@email.com"
        civilStatus:
          type: string
          example: "single"
        religion:
          type: string
          example: "Catholic"
        emergencyContactPerson:
          type: string
          example: "Hilda Cristobal"
        emergencyContactNumber:
          type: string
          example: 09123456789

  addFacultyEmploymentInfoSource:
    properties:
        facultyId:
          type: string
          example: "1"
        position:
          type: string
          example: "20"
        startDate:
          type: string
          example: "1994-01-06"
        endDate:
          type: string
          example: "1994-01-06"

  addFacultyUnitSource:
    properties:
        facultyId:
          type: string
          example: "1"
        unitId:
          type: string
          example: "1"

  addFacultyEducationInfoSource:
    properties:
        facultyId:
          type: string
          example: "1"
        institutionSchool:
          type: string
          example: "UPM"
        degreeCert:
          type: string
          example: "BS CS"
        majorSpecialization:
          type: string
          example: "HI"
        startDate:
          type: string
          example: "1994-01-06"
        endDate:
          type: string
          example: "1994-01-06"
        proof:
          type: string
          format: binary
          example: "J5IO84K233ZU6HKPK5RAATHK98W7I1Y2069.jpeg"
        status:
          type: string
          example: "for verification"

  addFacultyWorkExpInfoSource:
    properties:
        facultyId:
          type: string
          example: "1"
        employerName:
          type: string
          example: "UPM"
        position:
          type: string
          example: "Instructor 1"
        startDate:
          type: string
          example: "1994-01-06"
        endDate:
          type: string
          example: "1995-01-06"
        description:
          type: string
          example: "Taught elementary calculus for 3 years"

  editFacultyPersonalInfoSource:
    properties:
        lastName:
          type: string
          example: "Cristobal"
        middleName:
          type: string
          example: "Pacay"
        permanentAddress:
          type: string
          example: "037 R. Higgins St., Brgy. 185, Pasay City"
        presentAddress:
          type: string
          example: "037 R. Higgins St., Brgy. 185, Pasay City"
        mobile:
          type: string
          example: "09123456789"
        landline:
          type: string
          example: "88161467"
        email:
          type: string
          example: "jodie@email.com"
        civilStatus:
          type: string
          example: "single"
        religion:
          type: string
          example: "Catholic"
        emergencyContactPerson:
          type: string
          example: "Hilda Cristobal"
        emergencyContactNumber:
          type: string
          example: 09123456789

  editFacultyEducationInfoSource:
    properties:
        educInfoId:
          type: string
          example: "1"
        endDate:
          type: string
          example: "1994-01-06"
        proof:
          type: string
          format: binary
          example: "J5IO84K233ZU6HKPK5RAATHK98W7I1Y2069.jpeg"
        status:
          type: string
          example: "for verification"

  addFacultyPublicationInfoSource:
    properties:
        title:
          type: string
          example: "Publication"
        journal:
          type: string
          example: "Publication"
        url:
          type: string
          example: "https://google.com"
        publicationDate:
          type: string
          example: "1994-01-06"
        nonFacultyAuthors:
          type: string
          example: "Author 1, Author 2, Author 3"

  editFacultyPublisherInfoSource:
    properties:
        publicationId:
          type: string
          example: "1"
        proof:
          type: string
          format: binary
          example: "J5IO84K233ZU6HKPK5RAATHK98W7I1Y2069.jpeg"
        status:
          type: string
          example: "for verification"

  addFacultyTSInfoSource:
    properties:
        facultyId:
          type: string
          example: "2"
        title:
          type: string
          example: "MySQL Training"
        role:
          type: string
          example: "Speaker"
        dateFrom:
          type: string
          example: "2004-01-06"
        dateTo:
          type: string
          example: "2004-01-07"
        venue:
          type: string
          example: "UP Diliman"
        proof:
          type: string
          example: "1G71O9UG2E2H6L1GLO25ULQ84C06YXM9G38.jpeg"

  addStudentPersonalInfoSource:
    properties:
        lastName:
          type: string
          example: "Cristobal"
        firstName:
          type: string
          example: "Jodie"
        middleName:
          type: string
          example: "Pacay"
        dateOfBirth:
          type: string
          example: "1994-01-06"
        placeOfBirth:
          type: string
          example: "Manila"
        gender:
          type: string
          example: female
        permanentAddress:
          type: string
          example: "037 R. Higgins St., Brgy. 185, Pasay City"
        presentAddress:
          type: string
          example: "037 R. Higgins St., Brgy. 185, Pasay City"
        contactNumber:
          type: string
          example: "09123456789"
        email:
          type: string
          example: "jodie@email.com"
        civilStatus:
          type: string
          example: "single"
        religion:
          type: string
          example: "Catholic"
        emergencyContactPerson:
          type: string
          example: "Hilda Cristobal"
        emergencyContactNumber:
          type: string
          example: 09123456789
  
  addAlumniPersonalInfoSource:
    properties:
        lastName:
          type: string
          example: "Cristobal"
        firstName:
          type: string
          example: "Jodie"
        middleName:
          type: string
          example: "Pacay"
        contactNumber:
          type: string
          example: "09123456789"
        email:
          type: string
          example: "jodie@email.com"
  
  addAlumniWorkExpInfoSource:
    properties:
        alumniId:
          type: string
          example: "1"
        employerName:
          type: string
          example: "UPM"
        position:
          type: string
          example: "Instructor 1"

  ErrorResponse:
    type: object
    properties:
      success:
        type: boolean
        example: false
      message:
        type: string
        example: "Error message"
              
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
