openapi: '3.0.0'
info:
  title: 'UPM DPSM HRIS'
  version: '1.0.0'
  description: >-
    Human Resource Information System for the University of the Philippines Manila Department of Physical Sciences and Mathematics.

paths:
  "/api/health":
    get:
      tags:
      - Monitor Health

      operationId: monitorHealth
      summary: Get health status of app
      description: Get health status of app
      responses:
        default:
          description: Health check response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Server is up!"

  "/api/user/add":
    post:
      summary: Create new user
      tags:
      - User Enrollment
      description: Register user
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/definitions/userAddSource"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    result:
                      type: string
                      example: "User enrolled successfully"
                    
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"

  "/api/user/{userId}":
    put:
      summary: Edit user information
      tags:
      - User Enrollment
      description: Update user details
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: userId
          in: path
          description: User ID
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                role:
                  type: string
                  example: '2'
                status:
                  type: string
                  example: 'Active/Inactive'
                remarks:
                  type: string
                  example: 'Retired/Resigned/On Leave'
                password:
                  type: string
                  example: 'new password'
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    result:
                      type: string
                      example: "Faculty user information updated successfully"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []

  "/api/user/validate-password":
    post:
      summary: Validate Password
      tags:
      - User Enrollment
      description: Check if password is correct
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  example: 'password'
                userId:
                  type: string
                  example: '2'
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []

  "/api/user/admin":
    get:
      summary: Get admin user information
      tags:
      - User Enrollment
      description: Get admin user details
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    result:
                      type: object
                      example: [
                        {
                          "adminId": 2,
                          "userId": 72,
                          "name": "Alma S. Capio"
                        }
                      ]
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []

  "/api/user/admin/{userId}":
    delete:
      summary: Delete admin user information
      tags:
      - User Enrollment
      description: Delete admin user details
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: userId
          in: path
          description: User ID
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    result:
                      type: string
                      example: "Admin deleted successfully"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  
  "/api/user/forgot-password":
    post:
      summary: Reset user password 
      tags:
      - User Enrollment
      description: Reset user password
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                upemail:
                  type: string
                  example: 'jpcristobal1@up.edu.ph'
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: 'Email sent to j**********1@up.edu.ph'
                    result:
                      type: object
                      example: {
                          "messageId": "<ac60389a-43ef-8e6c-cfde-0d73fa43f697@gmail.com>"
                      }
                    
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
  
  "/api/user/forgot-password/{userId}/{token}":
    post:
      summary: Set new password 
      tags:
      - User Enrollment
      description: Set new password
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: userId
          in: path
          description: User ID
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: token
          in: path
          description: Password reset token
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  example: 'password'
                password2:
                  type: string
                  example: 'password'
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: 'Password reset successfully'
                    
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
  
  "/api/login":
    post:
      summary: Create access token 
      tags:
      - Access Token
      description: Get access token
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/definitions/accessTokenSource"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    result:
                      type: string
                      example: "xxxxxxxxxxxxxxxxxxxxx.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
                    
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
  
  "/api/faculty/basic-info":
    get:
      summary: Get list of faculty
      tags:
      - Faculty - Basic Information
      description: Summary of faculty employee information
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
          - name: unitId
            in: query
            description: Unit ID
            required: false
            style: simple
            explode: false
            schema:
              type: string
          - name: facultyId
            in: query
            description: Faculty ID to be excluded in the response
            required: false
            style: simple
            explode: false
            schema:
              type: string
          - name: status
            in: query
            description: Filter by Employment Status (Allowed value - 'ft')
            required: false
            style: simple
            explode: false
            schema:
              type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    result:
                      type: array
                      example: 
                        [
                          {
                              "unitId": 1,
                              "unit": "Chemistry",
                              "faculty_units": [
                                  {
                                    "facultyId": 14,
                                    "faculty_personal_info": {
                                      "lastName": "Cristobal",
                                      "firstName": "Jodie",
                                      "middleName": "Pacay",
                                      "faculty_employment_infos": [
                                        {
                                          "status": "Full-time",
                                          "category": "Permanent"
                                        }
                                      ],
                                      "faculty_update": {
                                        "updatedAt": "2021-06-02T14:25:01.000Z"
                                      },
                                      "user": {
                                        "status": "Active",
                                        "remarks": null
                                      }
                                    }
                                  }
                              ]
                          },
                          {
                              "unitId": 2,
                              "unit": "Mathematical and Computing Sciences",
                              "faculty_units": [
                                  {
                                    "facultyId": 1,
                                    "faculty_personal_info": {
                                      "lastName": "Cristobal",
                                      "firstName": "Jodie",
                                      "middleName": "Pacay",
                                      "faculty_employment_infos": [
                                        {
                                          "status": "Full-time",
                                          "category": "Permanent"
                                        }
                                      ],
                                      "faculty_update": {
                                        "updatedAt": "2021-05-27T23:04:15.000Z"
                                      },
                                      "user": {
                                        "userId": 1,
                                        "status": "Active",
                                        "remarks": null
                                      }
                                    }
                                  }
                              ]
                          },
                          {
                              "unitId": 3,
                              "unit": "Physics and Geology",
                              "faculty_units": [
                                  {
                                      "facultyId": 6,
                                      "faculty_personal_info": {
                                          "lastName": "Cristobal",
                                          "firstName": "Lee",
                                          "middleName": "Pacay",
                                          "faculty_employment_infos": [
                                            {
                                              "status": "Full-time",
                                              "category": "Permanent"
                                            }
                                          ],
                                          "faculty_updates": [],
                                          "user": {
                                            "status": "Inactive",
                                            "remarks": 'Resigned'
                                          }
                                      }
                                  }
                              ]
                          }
                      ]
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  
  "/api/faculty/basic-info/list/all":
    get:
      summary: Get complete list of all faculty
      tags:
      - Faculty - Basic Information
      description: Get all faculty list
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
          - name: unitId
            in: query
            description: Unit ID
            required: false
            style: simple
            explode: false
            schema:
              type: string
          - name: facultyId
            in: query
            description: Faculty ID to be excluded in the response
            required: false
            style: simple
            explode: false
            schema:
              type: string
          - name: status
            in: query
            description: Filter by Employment Status (Allowed value - 'ft')
            required: false
            style: simple
            explode: false
            schema:
              type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    result:
                      type: array
                      example: 
                        [
                          {
                            "facultyId": 3,
                            "userId": 4,
                            "lastName": "Palomar",
                            "firstName": "Lee",
                            "middleName": "Pacay",
                            "faculty_employment_infos": [
                              {
                                "status": "Full-time",
                                "category": "Permanent"
                              }
                            ],
                            "faculty_unit": {
                              "unitId": 2,
                              "unit": {
                                "unit": "Mathematical and Computing Sciences"
                              }
                            }
                          },
                          {
                            "facultyId": 2,
                            "userId": 3,
                            "lastName": "Palomar",
                            "firstName": "Matthew",
                            "middleName": "Pacay",
                            "faculty_employment_infos": [
                              {
                                "status": "Full-time",
                                "category": "Permanent"
                              }
                            ],
                            "faculty_unit": {
                              "unitId": 2,
                              "unit": {
                                "unit": "Mathematical and Computing Sciences"
                              }
                            }
                          }
                      ]
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  
  "/api/faculty/basic-info/add/personal":
    post:
      summary: Add faculty personal info
      tags:
      - Faculty - Basic Information - Personal Info
      description: Add faculty personal info
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/definitions/addFacultyPersonalInfoSource"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Faculty added successfully"
                    result:
                      type: object
                      example: 
                        {
                          facultyId: "18"
                        }
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  
  "/api/faculty/basic-info/{facultyId}":
    get:
      summary: Get faculty personal info
      tags:
      - Faculty - Basic Information - Personal Info
      description: Get faculty personal info
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
          - name: facultyId
            in: path
            description: Faculty ID
            required: true
            style: simple
            explode: false
            schema:
              type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    result:
                      type: object
                      example: 
                        {
                          "facultyId": 2,
                          "lastName": "Cristobal",
                          "firstName": "Bod",
                          "middleName": "Pacay",
                          "suffix": "III",
                          "dateOfBirth": "1994-01-06",
                          "placeOfBirth": "Manila",
                          "gender": "female",
                          "permanentAddress": "037 R. Higgins St., Brgy. 185, Pasay City",
                          "presentAddress": "037 R. Higgins St., Brgy. 185, Pasay City",
                          "mobile": "09123456789",
                          "landline": "88161461",
                          "email": "jodie@email2.com",
                          "civilStatus": "single",
                          "religion": "Catholic",
                          "emergencyContactPerson": "Hilda Cristobal",
                          "emergencyContactNumber": "09123456789",
                          "faculty_unit": {
                            "unitId": 1
                          },
                          "faculty_dependents": [
                            {
                              "dependentId": 6,
                              "name": "Edwin Cristobal",
                              "birthDate": "1959-12-06",
                              "relationship": "Father"
                            },
                            {
                              "dependentId": 7,
                              "name": "Jared Kevin Cristobal",
                              "birthDate": "1995-01-26",
                              "relationship": "Brother"
                            }
                          ]
                        }
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  
  "/api/faculty/basic-info/{facultyId}/personal":
    put:
      summary: Edit faculty personal info
      tags:
      - Faculty - Basic Information - Personal Info
      description: Edit faculty personal info
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
          - name: facultyId
            in: path
            description: Faculty ID
            required: true
            style: simple
            explode: false
            schema:
              type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/definitions/editFacultyPersonalInfoSource"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Faculty personal information updated successfully"
                    result:
                      type: object
                      example: 
                        {
                          facultyId: "18"
                        }
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  
  "/api/faculty/basic-info/dependent":
    put:
      summary: Add/Edit faculty dependent
      tags:
      - Faculty - Basic Information - Personal Info
      description: Add faculty dependent if no dependentId passed; Edit otherwise
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              example:
                [
                  {
                    "facultyId": "3 // only required if adding a new dependent", 
                    "name": "Edwin Cristobal",
                    "birthDate": "1959-12-06",
                    "relationship": "Father"
                  },
                  {
                    "dependentId": "10 //only required if editing an existing dependent", 
                    "name": "Jared Kevin Cristobal",
                    "birthDate": "1995-01-26",
                    "relationship": "Brother"
                  }
                ]
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Faculty dependent information updated successfully"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  
  "/api/faculty/basic-info/{facultyId}/dependent":
    delete:
      summary: Delete faculty dependent info
      tags:
      - Faculty - Basic Information - Personal Info
      description: Delete faculty dependent info
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
          - name: facultyId
            in: path
            description: Faculty ID
            required: true
            style: simple
            explode: false
            schema:
              type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                dependentId:
                  type: string
                  example: "12"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Faculty dependent information deleted successfully"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
    
  "/api/faculty/basic-info/add/employment":
    post:
      summary: Add faculty employment info
      tags:
      - Faculty - Basic Information - Employment Info
      description: Add faculty employment info
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/definitions/addFacultyEmploymentInfoSource"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Faculty employment information added successfully"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  
  "/api/faculty/basic-info/{facultyId}/employment":
    get:
      summary: Get faculty employment info
      tags:
      - Faculty - Basic Information - Employment Info
      description: Get faculty employment info
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
          - name: facultyId
            in: path
            description: Faculty ID
            required: true
            style: simple
            explode: false
            schema:
              type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    result:
                      type: object
                      example: 
                        {
                          "facultyId": 1,
                          "faculty_unit": {
                            "unitId": 1,
                            "unit": {
                              "unit": "Chemistry"
                            }
                          },
                          "faculty_employment_infos": [
                            {
                              "employmentInfoId": 1,
                              "startDate": "2004-01-06",
                              "endDate": null,
                              "faculty_employment_position": {
                                  "employmentPositionId": 1,
                                  "employmentType": "ftt",
                                  "position": "Instructor 1"
                              }
                            },
                            {
                              "employmentInfoId": 8,
                              "startDate": "1994-01-06",
                              "endDate": "1995-01-06",
                              "faculty_employment_position": {
                                  "employmentPositionId": 24,
                                  "employmentType": "ftp",
                                  "position": "Associate Professor 3"
                              }
                            },
                            {
                              "employmentInfoId": 9,
                              "startDate": "1994-01-06",
                              "endDate": "1994-01-06",
                              "faculty_employment_position": {
                                  "employmentPositionId": 20,
                                  "employmentType": "ftp",
                                  "position": "Assistant Professor 6"
                              }
                            }
                          ]
                        }
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
    put:
      summary: Edit faculty employment info
      tags:
      - Faculty - Basic Information - Employment Info
      description: Edit faculty employment info
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
          - name: facultyId
            in: path
            description: Faculty ID
            required: true
            style: simple
            explode: false
            schema:
              type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                employmentInfoId:
                  type: string
                  example: "16"
                employmentPositionId:
                  type: string
                  example: "13"
                status:
                  type: string
                  example: "Full-time"
                category:
                  type: string
                  example: "Permanent"
                startDate:
                  type: string
                  example: "2020-06-23"
                endDate:
                  type: string
                  example: "2021-01-30"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Faculty employment information updated successfully"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
    delete:
      summary: Delete faculty employment info
      tags:
      - Faculty - Basic Information - Employment Info
      description: Delete faculty employment info
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
          - name: facultyId
            in: path
            description: Faculty ID
            required: true
            style: simple
            explode: false
            schema:
              type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                employmentInfoId:
                  type: string
                  example: "12"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Faculty employment information deleted successfully"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
    
  "/api/faculty/basic-info/employment/positions":
    get:
      summary: Get employment positions list
      tags:
      - Faculty - Basic Information - Employment Info
      description: Get employment positions list
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    result:
                      type: object
                      example: 
                        [
                          {
                            "employmentPositionId": 1,
                            "position": "Instructor 1"
                          },
                          {
                            "employmentPositionId": 2,
                            "position": "Instructor 2"
                          },
                          {
                            "employmentPositionId": 3,
                            "position": "Instructor 3"
                          }
                        ]
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  
  "/api/faculty/basic-info/add/education":
    post:
      summary: Add faculty education info
      tags:
      - Faculty - Basic Information - Education Info
      description: Add faculty education info
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/definitions/addFacultyEducationInfoSource"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Faculty education information added successfully"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  
  "/api/faculty/basic-info/{facultyId}/education":
    get:
      summary: Get faculty education info
      tags:
      - Faculty - Basic Information - Education Info
      description: Get faculty education info
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
          - name: facultyId
            in: path
            description: Faculty ID
            required: true
            style: simple
            explode: false
            schema:
              type: string
          - name: status
            in: query
            description: Status
            required: false
            style: simple
            explode: false
            schema:
              type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    result:
                      type: array
                      example: 
                        [
                          {
                            "educInfoId": 4,
                            "institutionSchool": "UPM",
                            "degreeCert": "BS CS",
                            "majorSpecialization": "HI",
                            "startDate": "1994-01-06",
                            "endDate": "1994-01-06",
                            "proof": null,
                            "status": "Pending",
                            "createdAt": "2020-11-02T19:48:15.000Z",
                            "updatedAt": "2020-11-02T19:48:15.000Z"
                          },
                          {
                            "educInfoId": 9,
                            "institutionSchool": "UPM",
                            "degreeCert": "BS AP",
                            "majorSpecialization": null,
                            "startDate": "1994-01-06",
                            "endDate": "1995-01-06",
                            "proof": "EOPOG2BJ01PZZITKDI9RTC1830APH6MNK9D.jpeg",
                            "status": "Verified",
                            "createdAt": "2020-11-13T07:30:20.000Z",
                            "updatedAt": "2020-11-13T20:30:13.000Z"
                          }
                        ]
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
    put:
      summary: Edit faculty education info
      tags:
      - Faculty - Basic Information - Education Info
      description: Edit faculty education info
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
          - name: facultyId
            in: path
            description: Faculty ID
            required: true
            style: simple
            explode: false
            schema:
              type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/definitions/editFacultyEducationInfoSource"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Faculty education information updated successfully"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
    delete:
      summary: Delete faculty education info
      tags:
      - Faculty - Basic Information - Education Info
      description: Delete faculty education info
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
          - name: facultyId
            in: path
            description: Faculty ID
            required: true
            style: simple
            explode: false
            schema:
              type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                educInfoId:
                  type: string
                  example: "12"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Faculty education information deleted successfully"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
    
  "/api/faculty/basic-info/add/work-exp":
    post:
      summary: Add faculty work experience info
      tags:
      - Faculty - Basic Information - Work Experience Info
      description: Add faculty work experience info
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/definitions/addFacultyWorkExpInfoSource"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Faculty work experience information added successfully"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
 
  "/api/faculty/basic-info/{facultyId}/work-exp":
    get:
      summary: Get faculty work experience info
      tags:
      - Faculty - Basic Information - Work Experience Info
      description: Get faculty work experience info
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
          - name: facultyId
            in: path
            description: Faculty ID
            required: true
            style: simple
            explode: false
            schema:
              type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    result:
                      type: array
                      example: 
                        [
                          {
                            "workExpId": "1",
                            "employerName": "University of the Philippines Diliman",
                            "startDate": "2014-01-06",
                            "endDate": "2019-11-06",
                            "position": "Professor 1",
                            "description": "Description"
                          },
                          {
                            "workExpId": "2",
                            "employerName": "University of the Philippines Manila",
                            "startDate": "2004-01-06",
                            "endDate": "2013-11-06",
                            "position": "Instructor 1",
                            "description": null
                          }
                        ]
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
    put:
      summary: Edit faculty work experience info
      tags:
      - Faculty - Basic Information - Work Experience Info
      description: Edit faculty work experience info
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
          - name: facultyId
            in: path
            description: Faculty ID
            required: true
            style: simple
            explode: false
            schema:
              type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/definitions/editFacultyWorkExpInfoSource"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Faculty work experience information updated successfully"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
    delete:
      summary: Delete faculty work experience info
      tags:
      - Faculty - Basic Information - Work Experience Info
      description: Delete faculty work experience info
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
          - name: facultyId
            in: path
            description: Faculty ID
            required: true
            style: simple
            explode: false
            schema:
              type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                workExpId:
                  type: string
                  example: "12"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Faculty work experience information deleted successfully"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  
  "/api/faculty/basic-info/add/unit":
    post:
      summary: Add faculty unit
      tags:
      - Faculty - Unit
      description: Assign newly created faculty to a unit
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/definitions/addFacultyUnitSource"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Faculty unit information added successfully"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  
  "/api/faculty/basic-info/unit/{unitId}":
    put:
      summary: Edit faculty unit info
      tags:
      - Faculty - Unit
      description: Edit faculty unit info
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
          - name: unitId
            in: path
            description: Unit ID
            required: true
            style: simple
            explode: false
            schema:
              type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                incomingUnitHead:
                  type: string
                  example: '1'
                approverRemarks:
                  type: string
                  example: 'Wrong faculty'

      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Faculty unit information updated successfully"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
    
  "/api/faculty/basic-info/unit/assignment":
    get:
      summary: Get faculty unit assignment info
      tags:
      - Faculty - Unit
      description: Get faculty unit assignment info
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
          - name: unitId
            in: query
            description: Unit ID
            required: false
            style: simple
            explode: false
            schema:
              type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    result:
                      type: object
                      example: [
                        {
                          "unitId": 1,
                          "unit": "Chemistry",
                          "incomingUnitHead": 7,
                          "approverRemarks": null,
                          "faculty_personal_info": {
                            "lastName": "Palomar",
                            "firstName": "Jodie",
                            "middleName": "Pacay",
                            "user": {
                              "userId": 8,
                              "role": 1
                            }
                          },
                          "currentUnitHead": {
                            "facultyId": 5,
                            "faculty_personal_info": {
                              "lastName": "Cristobal",
                              "firstName": "Kenneth",
                              "middleName": "Pacay",
                              "user": {
                                "userId": 6,
                                "role": 2
                              }
                            }
                          }
                        },
                        {
                          "unitId": 2,
                          "unit": "Mathematical and Computing Sciences",
                          "incomingUnitHead": 4,
                          "approverRemarks": null,
                          "faculty_personal_info": {
                            "lastName": "Cristobal",
                            "firstName": "Diane",
                            "middleName": "Pacay",
                            "user": {
                              "userId": 5,
                              "role": 2
                            }
                          },
                          "currentUnitHead": {
                            "facultyId": 2,
                            "faculty_personal_info": {
                              "lastName": "Palomar",
                              "firstName": "Matthew",
                              "middleName": "Pacay",
                              "user": {
                                "userId": 3,
                                "role": 2
                              }
                            }
                          }
                        }
                      ]
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  
  "/api/faculty/accomplishment/public-service":
    get:
      summary: Get all approved faculty public service info
      tags:
      - Faculty - Accomplishments - Public Service
      description: Get all approved faculty public service info
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
          - name: unitId
            in: query
            description: Unit ID
            required: false
            style: simple
            explode: false
            schema:
              type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    result:
                      type: array
                      example: 
                        [
                          {
                            "facultyId": 58,
                            "unit": {
                                "unit": "Physics and Geology"
                            },
                            "faculty_personal_info": {
                                "lastName": "Bustillo",
                                "firstName": "John Paul",
                                "faculty_public_services": [
                                    {
                                        "type": "Within Pro",
                                        "position": "Resource Speaker",
                                        "organization": "Association of Nuclear Medicine Technologists ",
                                        "description": "served as resource person on use of Raman spectroscopy technique",
                                        "startDate": "2021-01-04",
                                        "endDate": "2021-01-04",
                                        "status": "Approved"
                                    }
                                ]
                            }
                          },
                          {
                            "facultyId": 48,
                            "unit": {
                                "unit": "Physics and Geology"
                            },
                            "faculty_personal_info": {
                                "lastName": "De Luna",
                                "firstName": "Marie Josephine",
                                "faculty_public_services": [
                                    {
                                        "type": "Within UPM",
                                        "position": "Resource Speaker",
                                        "organization": "UPM TTBDO",
                                        "description": "served as resource speaker on University Patent Application",
                                        "startDate": "2021-09-01",
                                        "endDate": "2021-09-01",
                                        "status": "Approved"
                                    },
                                    {
                                        "type": "Within Wor",
                                        "position": "Trainor",
                                        "organization": "AUN",
                                        "description": "served as trainor for AUN ",
                                        "startDate": "2021-01-12",
                                        "endDate": "2021-01-14",
                                        "status": "Approved"
                                    }
                                ]
                            }
                          }
                        ]
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []

  "/api/faculty/accomplishment/add/public-service":
    post:
      summary: Add faculty public service info
      tags:
      - Faculty - Accomplishments - Public Service
      description: Add faculty public service info
      consumes:
        - multipart/form-data
      produces:
        - application/json
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/definitions/addFacultyPublicServiceInfoSource"
      responses:
        "200":
          description: Success
          content:
              application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Faculty public service information added successfully"
                    result:
                      type: object
                      example: 
                        {
                          publicationId: "4"
                        }
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
 
  "/api/faculty/accomplishment/{facultyId}/public-service":
    get:
      summary: Get faculty public service info
      tags:
      - Faculty - Accomplishments - Public Service
      description: Get faculty public service info
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
          - name: facultyId
            in: path
            description: Faculty ID
            required: true
            style: simple
            explode: false
            schema:
              type: string
          - name: status
            in: query
            description: Status
            required: false
            style: simple
            explode: false
            schema:
              type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    result:
                      type: array
                      example: 
                        [
                          {
                            "publicServiceId": 2,
                            "type": "Within UPM",
                            "position": "Organizer",
                            "organization": "Socomsci",
                            "description": "No desc",
                            "startDate": "2010-06-01",
                            "endDate": "2012-03-30",
                            "proof": "P3018.png",
                            "status": "Pending"
                          },
                          {
                            "publicServiceId": 3,
                            "type": "Within UPM",
                            "position": "Organizers",
                            "organization": "Socomsci",
                            "description": "No desc",
                            "startDate": "2010-06-01",
                            "endDate": "2012-03-30",
                            "proof": "WHBJP.png",
                            "status": "Approved"
                          }
                        ]
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
    put:
      summary: Edit faculty public service info
      tags:
      - Faculty - Accomplishments - Public Service
      description: Edit faculty public service info
      consumes:
        - multipart/form-data
      produces:
        - multipart/form-data
      parameters:
          - name: facultyId
            in: path
            description: Faculty ID
            required: true
            style: simple
            explode: false
            schema:
              type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/definitions/editFacultyPublicServiceInfoSource"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Faculty public service information updated successfully"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
    delete:
      summary: Delete faculty public service info
      tags:
      - Faculty - Accomplishments - Public Service
      description: Delete faculty public service info
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
          - name: facultyId
            in: path
            description: Faculty ID
            required: true
            style: simple
            explode: false
            schema:
              type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                publicServiceId:
                  type: string
                  example: "12"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Faculty public service information deleted successfully"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  
  "/api/faculty/accomplishment/publication":
    get:
      summary: Get all approved faculty publication info
      tags:
      - Faculty - Accomplishments - Publication
      description: Get all approved faculty publication info
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
          - name: unitId
            in: query
            description: Unit ID
            required: false
            style: simple
            explode: false
            schema:
              type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    result:
                      type: array
                      example: 
                        [
                          {
                            "facultyId": 48,
                            "unit": {
                                "unit": "Physics and Geology"
                            },
                            "faculty_personal_info": {
                                "lastName": "De Luna",
                                "firstName": "Marie Josephine",
                                "faculty_publishers": [
                                    {
                                        "status": "Approved",
                                        "faculty_publication": {
                                            "title": "Investigation of gamma-irradiated multilayered polyethylene terephthalate/polypropylene composite fi",
                                            "citation": "Ilao, R. C., Maestre, R. T., & De Luna, M. J. (201",
                                            "url": "https://proceedings.spp-online.org/issue/view/SPP-2019",
                                            "publicationDate": "2019-03-25",
                                            "nonFacultyAuthors": "Romarica Costales Ilao, Ralph Thomas Maestre"
                                        }
                                    },
                                    {
                                        "status": "Approved",
                                        "faculty_publication": {
                                            "title": "Rapid quantitative determination of the unsaturated fat content of commercial cooking oils using Ram",
                                            "citation": "Edquila, K. M. V., Maestre, R. T. C., & De Luna, M",
                                            "url": "https://books.google.com.ph/books?hl=en&lr=&id=hq4SEAAAQBAJ&oi=fnd&pg=PA46&dq=info:JxznrEftFWYJ:scho",
                                            "publicationDate": "2019-03-27",
                                            "nonFacultyAuthors": "Kathleen Mae Valleja Edquila, Ralph Thomas Maestre, Ma. Sheila Magboo, Eden Huelgas, Marcelina Lirazan, Cathy Cruz Valencia, Pie Calayan, Vicky Belo K"
                                        }
                                    }
                                ]
                            }
                          }
                        ]
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []

  "/api/faculty/accomplishment/add/publication":
    post:
      summary: Add faculty publication info
      tags:
      - Faculty - Accomplishments - Publication
      description: Add faculty publication info
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/definitions/addFacultyPublicationInfoSource"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Faculty publication information added successfully"
                    result:
                      type: object
                      example: 
                        {
                          publicationId: "4"
                        }
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
   
  "/api/faculty/accomplishment/add/publisher":
    post:
      summary: Add faculty publisher info
      tags:
      - Faculty - Accomplishments - Publication
      description: Add faculty publisher info
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                facultyId:
                  type: string
                  example: '9'
                publicationId:
                  type: string
                  example: '4'
                proof:
                  type: file
                  example: 'ASK23N4.jpg'
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Faculty publisher information added successfully"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  
  "/api/faculty/accomplishment/{facultyId}/publication":
    get:
      summary: Get faculty publication info
      tags:
      - Faculty - Accomplishments - Publication
      description: Get faculty publication info
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
          - name: facultyId
            in: path
            description: Faculty ID
            required: true
            style: simple
            explode: false
            schema:
              type: string
          - name: status
            in: query
            description: Status
            required: false
            style: simple
            explode: false
            schema:
              type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    result:
                      type: array
                      example: 
                        [
                          {
                            "publicationId": 1,
                            "title": "Updated Publication",
                            "citation": "how to cite",
                            "url": null,
                            "publicationDate": "2019-11-06",
                            "nonFacultyAuthors": null,
                            "faculty_publishers": [
                              {
                                "facultyId": 12,
                                "proof": null,
                                "status": "Verified",
                                "faculty_personal_info": {
                                  "lastName": "Cristobal",
                                  "firstName": "Jodie",
                                  "middleName": "Pacay"
                                }
                              },
                              {
                                "facultyId": 2,
                                "proof": null,
                                "status": "Approved",
                                "faculty_personal_info": {
                                  "lastName": "Palomar",
                                  "firstName": "Matthew",
                                  "middleName": "Pacay"
                                }
                              }
                            ]
                          },
                          {
                            "publicationId": 4,
                            "title": "publication title",
                            "journal": "journal of publication",
                            "url": null,
                            "publicationDate": "2011-11-06",
                            "nonFacultyAuthors": "Author 1, Author 2, Author 3",
                            "faculty_publishers": [
                              {
                                "facultyId": 9,
                                "proof": null,
                                "status": "Pending",
                                "faculty_personal_info": {
                                  "lastName": "Cristobal",
                                  "firstName": "Aji",
                                  "middleName": "Pacay"
                                }
                              }
                            ]
                          }
                        ]
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
    put:
      summary: Edit faculty publication info
      tags:
      - Faculty - Accomplishments - Publication
      description: Edit faculty publication info
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
          - name: facultyId
            in: path
            description: Faculty ID
            required: true
            style: simple
            explode: false
            schema:
              type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/definitions/editFacultyPublicationInfoSource"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Faculty publication information updated successfully"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []

  "/api/faculty/accomplishment/{facultyId}/publisher":
    put:
      summary: Edit faculty publisher info
      tags:
      - Faculty - Accomplishments - Publication
      description: Edit faculty publisher info
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
          - name: facultyId
            in: path
            description: Faculty ID
            required: true
            style: simple
            explode: false
            schema:
              type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                publicationId:
                  type: string
                  example: "2"
                proof:
                  type: file
                  example: "WIj2Dv.jpg"
                status:
                  type: string
                  example: "Approved"
                approverRemarks:
                  type: string
                  example: "Date provided does not match date in proof //only required if status=Rejected"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Faculty publisher information updated successfully"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
    delete:
      summary: Delete faculty publisher info
      tags:
      - Faculty - Accomplishments - Publication
      description: Delete faculty publisher info
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
          - name: facultyId
            in: path
            description: Faculty ID
            required: true
            style: simple
            explode: false
            schema:
              type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                publicationId:
                  type: string
                  example: "12"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Faculty publisher information deleted successfully"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  
  "/api/faculty/accomplishment/training-seminar":
    get:
      summary: Get all approved faculty training/seminar info
      tags:
      - Faculty - Accomplishments - Training/Seminar
      description: Get all approved faculty training/seminar info
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
          - name: unitId
            in: query
            description: Unit ID
            required: false
            style: simple
            explode: false
            schema:
              type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    result:
                      type: array
                      example: 
                        [
                          {
                            "facultyId": 48,
                            "unit": {
                                "unit": "Physics and Geology"
                            },
                            "faculty_personal_info": {
                                "lastName": "De Luna",
                                "firstName": "Marie Josephine",
                                "faculty_training_seminars": [
                                  {
                                      "role": "Resource Person",
                                      "title": "Curricular Revision of BS Applied Physics, BS Biochemistry and BS Computer Science Programs",
                                      "dateFrom": "2017-08-23",
                                      "dateTo": "2017-08-25",
                                      "venue": "Manila Pavillon Hotel (Waterfront Hotel)",
                                      "remarks": "3 day workshop",
                                      "status": "Approved"
                                  }
                                ]
                            }
                          }
                        ]
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []

  "/api/faculty/accomplishment/add/training-seminar":
    post:
      summary: Add faculty training/seminar info
      tags:
      - Faculty - Accomplishments - Training/Seminar
      description: Add faculty training/seminar info
      consumes:
        - multipart/form-data
      produces:
        - application/json
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/definitions/addFacultyTSInfoSource"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Faculty training/seminar information added successfully"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  
  "/api/faculty/accomplishment/{facultyId}/training-seminar":
    get:
      summary: Get faculty training/seminar info
      tags:
      - Faculty - Accomplishments - Training/Seminar
      description: Get faculty training/seminar info
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
          - name: facultyId
            in: path
            description: Faculty ID
            required: true
            style: simple
            explode: false
            schema:
              type: string
          - name: status
            in: query
            description: Status
            required: false
            style: simple
            explode: false
            schema:
              type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    result:
                      type: array
                      example: 
                        [
                          {
                            "tsId": 19,
                            "role": "Attendee",
                            "title": "MySQL Training",
                            "dateFrom": "2019-06-29",
                            "dateTo": "2019-06-27",
                            "venue": "UP ITDC",
                            "remarks": "Remarks",
                            "proof": "65KG9KD3A4OXQEQM0TEJJH1QGHP78D16FBW.jpeg",
                            "status": "Pending"
                          },
                          {
                            "tsId": 18,
                            "role": "Speaker",
                            "title": "MySQL Training",
                            "dateFrom": "2019-06-28",
                            "dateTo": "2019-06-27",
                            "venue": "UP ITDC",
                            "proof": "TDWCCIZLOK0UAFX713LYM866P7G8AWQSWEL.jpeg",
                            "status": "Verified"
                          }
                        ]
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
    put:
      summary: Edit faculty training/seminar info
      tags:
      - Faculty - Accomplishments - Training/Seminar
      description: Edit faculty training/seminar info
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
          - name: facultyId
            in: path
            description: Faculty ID
            required: true
            style: simple
            explode: false
            schema:
              type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/definitions/editFacultyTrainingSeminarInfoSource"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Faculty training/seminar information updated successfully"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
    delete:
      summary: Delete faculty training/seminar info
      tags:
      - Faculty - Accomplishments - Training/Seminar
      description: Delete faculty training/seminar info
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
          - name: facultyId
            in: path
            description: Faculty ID
            required: true
            style: simple
            explode: false
            schema:
              type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tsId:
                  type: string
                  example: "12"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Faculty training/seminar information deleted successfully"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  
  "/api/faculty/accomplishment/licensure-exam":
    get:
      summary: Get all approved faculty licensure exam info
      tags:
      - Faculty - Accomplishments - Licensure Exam
      description: Get all approved faculty licensure exam info
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
          - name: unitId
            in: query
            description: Unit ID
            required: false
            style: simple
            explode: false
            schema:
              type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    result:
                      type: array
                      example: 
                        [
                          {
                            "facultyId": 48,
                            "unit": {
                                "unit": "Physics and Geology"
                            },
                            "faculty_personal_info": {
                                "lastName": "De Luna",
                                "firstName": "Marie Josephine",
                                "faculty_licensure_exams": [
                                  {
                                      "examName": "Civil Service Professional",
                                      "examDate": "2021-09-01",
                                      "licenseNumber": "123456",
                                      "rank": 0,
                                      "status": "Approved"
                                  }
                                ]
                            }
                          }
                        ]
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []

  "/api/faculty/accomplishment/add/licensure-exam":
    post:
      summary: Add faculty licensure exam info
      tags:
      - Faculty - Accomplishments - Licensure Exam
      description: Add faculty licensure exam info
      consumes:
        - multipart/form-data
      produces:
        - application/json
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/definitions/addFacultyLicensureExamInfoSource"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Faculty licensure exam information added successfully"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  
  "/api/faculty/accomplishment/{facultyId}/licensure-exam":
    get:
      summary: Get faculty licensure exam info
      tags:
      - Faculty - Accomplishments - Licensure Exam
      description: Get faculty licensure exam info
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
          - name: facultyId
            in: path
            description: Faculty ID
            required: true
            style: simple
            explode: false
            schema:
              type: string
          - name: status
            in: query
            description: Status
            required: false
            style: simple
            explode: false
            schema:
              type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    result:
                      type: array
                      example: 
                        [
                          {
                            "licenseId": 1,
                            "examName": "PLE",
                            "examDate": "2019-06-29",
                            "licenseNumber": "UP ITDC",
                            "rank": null,
                            "proof": "",
                            "status": "Pending"
                          },
                          {
                            "licenseId": 2,
                            "examName": "Chem boards",
                            "examDate": "2019-06-29",
                            "licenseNumber": "UP ITDC",
                            "rank": null,
                            "proof": "5XH4DFNUPBJEOB79MH8E5QX2RKU.pdf",
                            "status": "Verified"
                          }
                        ]
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
    put:
      summary: Edit faculty licensure exam info
      tags:
      - Faculty - Accomplishments - Licensure Exam
      description: Edit faculty licensure exam info
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
          - name: facultyId
            in: path
            description: Faculty ID
            required: true
            style: simple
            explode: false
            schema:
              type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/definitions/editFacultyLicensureExamInfoSource"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Faculty licensure exam information updated successfully"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
    delete:
      summary: Delete faculty licensure exam info
      tags:
      - Faculty - Accomplishments - Licensure Exam
      description: Delete faculty licensure exam info
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
          - name: facultyId
            in: path
            description: Faculty ID
            required: true
            style: simple
            explode: false
            schema:
              type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                licenseId:
                  type: string
                  example: "12"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Faculty licensure exam information deleted successfully"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  
  "/api/faculty/accomplishment/research-grant":
    get:
      summary: Get all approved faculty research grant info
      tags:
      - Faculty - Accomplishments - Research Grant
      description: Get all approved faculty research grant info
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
          - name: unitId
            in: query
            description: Unit ID
            required: false
            style: simple
            explode: false
            schema:
              type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    result:
                      type: array
                      example: 
                        [
                          {
                            "facultyId": 48,
                            "unit": {
                                "unit": "Physics and Geology"
                            },
                            "faculty_personal_info": {
                                "lastName": "De Luna",
                                "firstName": "Marie Josephine",
                                "faculty_researchers": [
                                  {
                                      "status": "Approved",
                                      "faculty_research_grant": {
                                          "researchName": "Research 1",
                                          "granter": "UP Manila",
                                          "amount": 100000,
                                          "projectedStart": "2021-09-01",
                                          "projectedEnd": "2021-09-30",
                                          "actualStart": "2021-09-06",
                                          "actualEnd": "2021-09-30",
                                          "researchProgress": "Ongoing",
                                          "nonFacultyResearchers": ""
                                      }
                                  }
                                ]
                            }
                          }
                        ]
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []

  "/api/faculty/accomplishment/add/research-grant":
    post:
      summary: Add faculty research grant info
      tags:
      - Faculty - Accomplishments - Research Grant
      description: Add faculty research grant info
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/definitions/addFacultyResearchGrantInfoSource"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Faculty researchGrant information added successfully"
                    result:
                      type: object
                      example: 
                        {
                          researchId: "4"
                        }
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  
  "/api/faculty/accomplishment/add/researcher":
    post:
      summary: Add faculty researcher info
      tags:
      - Faculty - Accomplishments - Research Grant
      description: Bulk add faculty researcher info
      consumes:
        - multipart/form-data
      produces:
        - application/json
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                facultyId:
                  type: string
                  example: '9'
                researchId:
                  type: string
                  example: '1'
                proof:
                  type: file
                  example: '1G71O9UG2E2H6L1GLO25ULQ84C06YXM9G38.jpeg'
                status:
                  type: string
                  example: 'Approved'
                approverRemarks:
                  type: string
                  example: '//required only if status=Rejected'
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Faculty researcher information added successfully"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  
  "/api/faculty/accomplishment/{facultyId}/research-grant":
    get:
      summary: Get faculty research grant info
      tags:
      - Faculty - Accomplishments - Research Grant
      description: Get faculty research grant info
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
          - name: facultyId
            in: path
            description: Faculty ID
            required: true
            style: simple
            explode: false
            schema:
              type: string
          - name: status
            in: query
            description: Status
            required: false
            style: simple
            explode: false
            schema:
              type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    result:
                      type: array
                      example: 
                        [
                          {
                            "researchId": 1,
                            "researchName": "new publication title",
                            "granter": "journal of publication",
                            "amount": 1000000,
                            "projectedStart": "2019-11-06",
                            "projectedEnd": "2019-11-06",
                            "actualStart": "2019-11-06",
                            "actualEnd": "2019-11-06",
                            "researchProgress": "Ongoing",
                            "nonFacultyResearchers": "Author 1, Author 2, Author 3",
                            "faculty_researchers": [
                              {
                                "facultyId": 9,
                                "proof": null,
                                "status": "Pending",
                                "faculty_personal_info": {
                                    "lastName": "Cristobal",
                                    "firstName": "Aji",
                                    "middleName": "Pacay"
                                }
                              },
                              {
                                "facultyId": 10,
                                "proof": null,
                                "status": "Pending",
                                "faculty_personal_info": {
                                    "lastName": "Cristobal",
                                    "firstName": "Sarah",
                                    "middleName": "Pacay"
                                }
                              },
                              {
                                "facultyId": 8,
                                "proof": null,
                                "status": "Pending",
                                "faculty_personal_info": {
                                    "lastName": "Palomar",
                                    "firstName": "Diane",
                                    "middleName": "Pacay"
                                }
                              }
                            ]
                          }
                        ]
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
    put:
      summary: Edit faculty research grant info
      tags:
      - Faculty - Accomplishments - Research Grant
      description: Edit faculty research grant info
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
          - name: facultyId
            in: path
            description: Faculty ID
            required: true
            style: simple
            explode: false
            schema:
              type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/definitions/editFacultyResearchGrantInfoSource"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Faculty research grant information updated successfully"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []

  "/api/faculty/accomplishment/{facultyId}/researcher":
    put:
      summary: Edit faculty researcher info
      tags:
      - Faculty - Accomplishments - Research Grant
      description: Edit faculty researcher info
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
          - name: facultyId
            in: path
            description: Faculty ID
            required: true
            style: simple
            explode: false
            schema:
              type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                researchId:
                  type: string
                  example: "2"
                status:
                  type: string
                  example: "Approved"
                proof:
                  type: file
                  example: '1G71O9UG2E2H6L1GLO25ULQ84C06YXM9G38.jpeg'
                approverRemarks:
                  type: string
                  example: "Date provided does not match date in proof //only required if status=Rejected"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Faculty researcher information updated successfully"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
    delete:
      summary: Delete faculty researcher info
      tags:
      - Faculty - Accomplishments - Research Grant
      description: Delete faculty researcher info
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
          - name: facultyId
            in: path
            description: Faculty ID
            required: true
            style: simple
            explode: false
            schema:
              type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                researchId:
                  type: string
                  example: "12"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Faculty researcher information deleted successfully"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  
  "/api/faculty/reports/accomplishment":
    get:
      summary: Get unit/department accomplishments
      tags:
      - Reports
      description: Get unit/department accomplishments
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
          - name: unitId
            in: query
            description: Unit ID
            required: false
            style: simple
            explode: false
            schema:
              type: string
          - name: startDate
            in: query
            description: Start Date
            required: false
            style: simple
            explode: false
            schema:
              type: string
          - name: endDate
            in: query
            description: End Date
            required: false
            style: simple
            explode: false
            schema:
              type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    result:
                      type: array
                      example: 
                        [
                          {
                            "facultyId": 4,
                            "lastName": "Cristobal",
                            "firstName": "Diane",
                            "faculty_unit": {
                              "unitId": 2,
                              "unit": {
                                "unit": "Mathematical and Computing Sciences"
                              }
                            },
                            "faculty_public_services": [],
                            "faculty_publishers": [],
                            "faculty_training_seminars": [
                              {
                                "title": "MySQL Training",
                                "dateFrom": "2019-06-27",
                                "dateTo": "2019-06-27"
                              },
                              {
                                "title": "MySQL Training",
                                "dateFrom": "2019-06-27",
                                "dateTo": "2019-06-27"
                              }
                            ],
                            "faculty_researchers": []
                          }
                        ]
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
    
  "/api/faculty/reports/employment":
    get:
      summary: Get unit/department employment summary
      tags:
      - Reports
      description: Get unit/department employment summary
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
          - name: unitId
            in: query
            description: Unit ID
            required: false
            style: simple
            explode: false
            schema:
              type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    result:
                      type: array
                      example: 
                        [
                          {
                            "facultyId": 10,
                            "lastName": "Cristobal",
                            "firstName": "Sarah",
                            "faculty_unit": {
                              "unitId": 1,
                              "unit": {
                                "unit": "Chemistry"
                              }
                            },
                            "faculty_employment_infos": [
                              {
                                "employmentPositionId": 4,
                                "startDate": "2020-11-02",
                                "endDate": null,
                                "faculty_employment_position": {
                                  "position": "Instructor 4",
                                  "employmentType": "ftt"
                                }
                              }
                            ]
                          }
                        ]
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  
  "/api/faculty/reports/education":
    get:
      summary: Get unit/department education summary
      tags:
      - Reports
      description: Get unit/department education summary
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
          - name: unitId
            in: query
            description: Unit ID
            required: false
            style: simple
            explode: false
            schema:
              type: string
          - name: startDate
            in: query
            description: Start Date
            required: false
            style: simple
            explode: false
            schema:
              type: string
          - name: endDate
            in: query
            description: End Date
            required: false
            style: simple
            explode: false
            schema:
              type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    result:
                      type: array
                      example: 
                        [
                          {
                            "facultyId": 10,
                            "lastName": "Cristobal",
                            "firstName": "Sarah",
                            "faculty_unit": {
                              "unitId": 1,
                              "unit": {
                                "unit": "Chemistry"
                              }
                            },
                            "faculty_education_infos": [
                              {
                                "educInfoId": 42,
                                "degreeType": "BS",
                                "degreeCert": "Computer Science",
                                "endDate": "2019-03-16"
                              }
                            ]
                          }
                        ]
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  
  "/api/faculty/load":
    post:
      summary: Add faculty load
      tags:
      - Faculty - Load
      description: Add faculty load information
      consumes:
        - multipart/form-data
      produces:
        - application/json
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/definitions/addFacultyLoadSource"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Faculty class record added successfully"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  
  "/api/faculty/load/{facultyId}":
    get:
      summary: Get faculty load info
      tags:
      - Faculty - Load
      description: Get faculty load info
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
          - name: facultyId
            in: path
            description: Faculty ID
            required: false
            style: simple
            explode: false
            schema:
              type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    result:
                      type: array
                      example: 
                        [
                          {
                            "recordId": 10,
                            "academicYear": "2021",
                            "semester": "1st Semester",
                            "subject": "CMSC 123",
                            "section": "MHI",
                            "setResults": "6YXHSCVC62IKJ0YVG3C76OTK85OP9MBHW2ZX8WM60WJUG0VS.pdf",
                            "syllabus": null,
                            "facultyId": 2
                          },
                          {
                            "recordId": 4,
                            "academicYear": "2021",
                            "semester": "2nd Semester",
                            "subject": "CMSC 123",
                            "section": "MSI",
                            "setResults": "L7UAC7U6LUUMUAND7JWVAP8QDPUIFNSHXOP.pdf",
                            "syllabus": "UP89NF4NOK1JP6V7N79Y821UEIK29DBH4PKBHHSVKEVPM2VCLZHN.jpeg",
                            "facultyId": 2
                          }
                        ]
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
    put:
      summary: Edit faculty load info
      tags:
      - Faculty - Load
      description: Edit faculty load info
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
          - name: facultyId
            in: path
            description: Faculty ID
            required: true
            style: simple
            explode: false
            schema:
              type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                recordId:
                  type: string
                  example: '5'
                subject:
                  type: string
                  example: 'CMSC 127' 
                section:
                  type: string
                  example: 'ISP' 
                semester:
                  type: string
                  example: 'ISP' 
                academicYear:
                  type: string
                  example: 'ISP' 
                syllabus:
                  type: file
                  example: 'SHYHY1Q07WS8UP1P5CABX4NW57YZ9S3GVMR.pdf'
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Faculty load information updated successfully"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
    delete:
      summary: Delete faculty load info
      tags:
      - Faculty - Load
      description: Delete faculty load info
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
          - name: facultyId
            in: path
            description: Faculty ID
            required: true
            style: simple
            explode: false
            schema:
              type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                recordId:
                  type: string
                  example: "12"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Faculty load information deleted successfully"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
    
  "/api/faculty/evaluation":
    post:
      summary: Add faculty peer evaluation
      tags:
      - Faculty - Peer Evaluation
      description: Add faculty peer evaluation
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/definitions/addFacultyEvaluationSource"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Faculty peer evaluation added successfully"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  
  "/api/faculty/approval/{facultyId}":
    get:
      summary: Get faculty approval list info
      tags:
      - Faculty - Approvals
      description: Get faculty approval list info
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
          - name: facultyId
            in: path
            description: Faculty ID
            required: true
            style: simple
            explode: false
            schema:
              type: string
          - name: unitId
            in: query
            description: Unit ID
            required: false
            style: simple
            explode: false
            schema:
              type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    result:
                      type: object
                      example: 
                        {
                          "facultyCount": 2,
                          "rows": [
                              {
                                  "unitId": 2,
                                  "unit": "Mathematical and Computing Sciences",
                                  "faculty_units": [
                                      {
                                          "facultyId": 4,
                                          "faculty_personal_info": {
                                              "lastName": "Cristobal",
                                              "firstName": "Diane",
                                              "middleName": "Pacay",
                                              "faculty_education_infos": [],
                                              "faculty_public_services": [],
                                              "faculty_licensure_exams": [],
                                              "faculty_training_seminars": [
                                                  {
                                                      "tsId": 16,
                                                      "role": "",
                                                      "title": "MySQL Training",
                                                      "dateFrom": "2019-06-27",
                                                      "dateTo": "2019-06-27",
                                                      "venue": "UP ITDC",
                                                      "remarks": null,
                                                      "proof": "FQ98VMA3G9TSARU1DRYW0M5J2PAMCM7J7ZO.jpeg",
                                                      "status": "Pending",
                                                      "createdAt": "2020-11-28T14:18:32.000Z",
                                                      "updatedAt": "2020-11-28T14:18:32.000Z",
                                                      "facultyId": 4
                                                  }
                                              ],
                                              "faculty_publishers": [],
                                              "faculty_researchers": []
                                          },
                                          "forApprovalCount": 1
                                      },
                                      {
                                          "facultyId": 3,
                                          "faculty_personal_info": {
                                              "lastName": "Palomar",
                                              "firstName": "Lee",
                                              "middleName": "Pacay",
                                              "faculty_education_infos": [],
                                              "faculty_public_services": [],
                                              "faculty_licensure_exams": [],
                                              "faculty_training_seminars": [
                                                  {
                                                      "tsId": 8,
                                                      "role": "",
                                                      "title": "MySQL Training",
                                                      "dateFrom": "2019-06-27",
                                                      "dateTo": "2019-06-27",
                                                      "venue": "UP ITDC",
                                                      "remarks": null,
                                                      "proof": null,
                                                      "status": "Pending",
                                                      "createdAt": "2020-11-28T14:03:10.000Z",
                                                      "updatedAt": "2020-11-28T14:03:10.000Z",
                                                      "facultyId": 3
                                                  }
                                              ],
                                              "faculty_publishers": [
                                                  {
                                                      "publisherId": 11,
                                                      "publicationId": 5,
                                                      "proof": "UMWEZF8EW7HWC8H5BSFCUETH.png",
                                                      "status": "Pending",
                                                      "createdAt": "2021-05-07T09:02:54.000Z",
                                                      "updatedAt": "2021-05-07T09:02:54.000Z",
                                                      "facultyId": 3
                                                  }
                                              ],
                                              "faculty_researchers": [
                                                  {
                                                      "researcherId": 8,
                                                      "researchId": 1,
                                                      "proof": null,
                                                      "status": "Pending",
                                                      "createdAt": "2020-11-30T15:25:23.000Z",
                                                      "updatedAt": "2021-04-23T04:00:53.000Z",
                                                      "facultyId": 3
                                                  }
                                              ]
                                          },
                                          "forApprovalCount": 3
                                      }
                                  ]
                              }
                          ]
                      }
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
    
  "/api/student/add/personal":
    post:
      summary: Add student personal info
      tags:
      - Student
      description: Add student personal info
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/definitions/addStudentPersonalInfoSource"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Student added successfully"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  
  "/api/alumni/add/personal":
    post:
      summary: Add alumni personal info
      tags:
      - Alumni
      description: Add alumni personal info
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/definitions/addAlumniPersonalInfoSource"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Alumni added successfully"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  
  "/api/alumni/add/work-exp":
    post:
      summary: Add alumni work experience info
      tags:
      - Alumni
      description: Add alumni work experience info
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/definitions/addAlumniWorkExpInfoSource"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Alumni work experience information added successfully"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  
  "/api/download/{filename}":
    get:
      summary: Download file
      tags:
      - Download
      description: Download file
      parameters:
          - name: filename
            in: path
            description: File Name
            required: true
            style: simple
            explode: false
            schema:
              type: string
      responses:
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  
definitions:
  userAddSource:
    properties:
        role:
          type: string
          example: "1"
        upemail:
          type: string
          example: "jpcristobal1@upm.edu.ph"
        password:
          type: string
          example: "password"
        name:
          type: string
          example: "Alma S. Capio //required only if role=5 (admin)"
        personalInfo:
          type: object
          example: {
            "lastName": "Cristobal",
            "firstName": "Jodie",
            "middleName": "Pacay",
            "dateOfBirth": "1994-01-06",
            "placeOfBirth": "Manila",
            "gender": "Female",
            "permanentAddress": "037 R. Higgins St., Brgy. 185, Pasay City",
            "presentAddress": "037 R. Higgins St., Brgy. 185, Pasay City",
            "mobile": "09123456789",
            "landline": "88161467",
            "email": "jodielee@email.com",
            "civilStatus": "single",
            "religion": "Catholic",
            "emergencyContactPerson": "Hilda Cristobal",
            "emergencyContactNumber": "09123456789",
            "teachingPhilosophy": "Teaching Philosophy"
          }
        unitId:
          type: string
          example: '3'
        employmentPositionId:
          type: string
          example: '38'
        startDate:
          type: string
          example: '2024-01-06'
        status:
          type: string
          example: "Full-time"
        category:
          type: string
          example: "Permanent"

  accessTokenSource:
    properties:
        upemail:
          type: string
          example: "username"
        password:
          type: string
          example: "password"

  addFacultyPersonalInfoSource:
    properties:
        userId:
          type: string
          example: "2"
        lastName:
          type: string
          example: "Cristobal"
        firstName:
          type: string
          example: "Jodie"
        middleName:
          type: string
          example: "Pacay"
        suffix:
          type: string
          example: "III"
        dateOfBirth:
          type: string
          example: "1994-01-06"
        placeOfBirth:
          type: string
          example: "Manila"
        gender:
          type: string
          example: female
        permanentAddress:
          type: string
          example: "037 R. Higgins St., Brgy. 185, Pasay City"
        presentAddress:
          type: string
          example: "037 R. Higgins St., Brgy. 185, Pasay City"
        mobile:
          type: string
          example: "09123456789"
        landline:
          type: string
          example: "88161467"
        email:
          type: string
          example: "jodie@email.com"
        civilStatus:
          type: string
          example: "single"
        religion:
          type: string
          example: "Catholic"
        emergencyContactPerson:
          type: string
          example: "Hilda Cristobal"
        emergencyContactNumber:
          type: string
          example: 09123456789
  
  addFacultyUnitSource:
    properties:
        facultyId:
          type: string
          example: "1"
        unitId:
          type: string
          example: "1"

  addFacultyEmploymentInfoSource:
    properties:
        facultyId:
          type: string
          example: "1"
        employmentPositionId:
          type: string
          example: "20"
        status:
          type: string
          example: "Full-time"
        category:
          type: string
          example: "Permanent"
        startDate:
          type: string
          example: "1994-01-06"
        endDate:
          type: string
          example: "1994-01-06"

  addFacultyEducationInfoSource:
    type: object
    properties:
        facultyId:
          type: string
          example: "1"
        institutionSchool:
          type: string
          example: "UPM"
        degreeType:
          type: string
          example: "AA/AS/BA/BS/MA/MS/MD/PhD"
        degreeCert:
          type: string
          example: "Computer Science"
        majorSpecialization:
          type: string
          example: "HI"
        startDate:
          type: string
          example: "1994-01-06"
        endDate:
          type: string
          example: "1994-01-06"
        proof:
          type: file
          example: "J5IO84K233ZU6HKPK5RAATHK98W7I1Y2069.jpeg"
        status:
          type: string
          example: "Verified"

  addFacultyWorkExpInfoSource:
    properties:
        facultyId:
          type: string
          example: "1"
        employerName:
          type: string
          example: "UPM"
        position:
          type: string
          example: "Instructor 1"
        startDate:
          type: string
          example: "1994-01-06"
        endDate:
          type: string
          example: "1995-01-06"
        description:
          type: string
          example: "Taught elementary calculus for 3 years"

  editFacultyPersonalInfoSource:
    properties:
        lastName:
          type: string
          example: "Cristobal"
        middleName:
          type: string
          example: "Pacay"
        suffix:
          type: string
          example: "Jr."
        permanentAddress:
          type: string
          example: "037 R. Higgins St., Brgy. 185, Pasay City"
        presentAddress:
          type: string
          example: "037 R. Higgins St., Brgy. 185, Pasay City"
        mobile:
          type: string
          example: "09123456789"
        landline:
          type: string
          example: "88161467"
        email:
          type: string
          example: "jodie@email.com"
        civilStatus:
          type: string
          example: "single"
        religion:
          type: string
          example: "Catholic"
        emergencyContactPerson:
          type: string
          example: "Hilda Cristobal"
        emergencyContactNumber:
          type: string
          example: 09123456789

  editFacultyEducationInfoSource:
    type: object
    properties:
        educInfoId:
          type: string
          example: "1"
        institutionSchool: 
          type: string
          example: "University of the Philippines Manila"
        degreeType:
          type: string
          example: "AA/AS/BA/BS/MA/MS/MD/PhD"
        degreeCert: 
          type: string
          example: "Computer Science"
        majorSpecialization: 
          type: string
          example: "Health Informatics"
        startDate: 
          type: string
          example: "2011-06-01"
        endDate:
          type: string
          example: "2016-01-06"
        proof:
          type: file
          example: "J5IO84K233ZU6HKPK5RAATHK98W7I1Y2069.jpeg"
        status:
          type: string
          example: "Verified"
        approverRemarks:
          type: string
          example: "Date provided does not match date in proof //only required if status=Rejected"

  editFacultyWorkExpInfoSource:
    properties:
        workExpId:
          type: string
          example: "1"
        employerName:
          type: string
          example: "UPM"
        position:
          type: string
          example: "Instructor 1"
        startDate:
          type: string
          example: "1994-01-06"
        endDate:
          type: string
          example: "1995-01-06"
        description:
          type: string
          example: "Taught elementary calculus for 3 years"

  addFacultyPublicServiceInfoSource:
    type: object
    properties:
        facultyId:
          type: string
          example: "1"
        type:
          type: string
          example: "Within UPM/Profession/Nation/World"
        position:
          type: string
          example: "Organizer"
        organization:
          type: string
          example: "Socomsci"
        description:
          type: string
          example: "Organized SOCOMSCI"
        startDate:
          type: string
          example: "2020-06-01"
        endDate:
          type: string
          example: "2020-07-01"
        proof:
          type: file
          example: "5XH4DFNUPBJEOB79MH8E5QX2RKU.pdf"

  editFacultyPublicServiceInfoSource:
    type: object
    properties:
        publicServiceId:
          type: string
          example: "1"
        type:
          type: string
          example: "Within UPM/Profession/Nation/World"
        position:
          type: string
          example: "Organizer"
        organization:
          type: string
          example: "Socomsci"
        description:
          type: string
          example: "Organized SOCOMSCI"
        startDate:
          type: string
          example: "2020-06-01"
        endDate:
          type: string
          example: "2020-07-01"
        proof:
          type: file
          example: "5XH4DFNUPBJEOB79MH8E5QX2RKU.pdf"
        status:
          type: string
          example: "Verified"
        approverRemarks:
          type: string
          example: "Date provided does not match date in proof //only required if status=Rejected"

  addFacultyPublicationInfoSource:
    properties:
        title:
          type: string
          example: "Publication"
        citation:
          type: string
          example: "Citation"
        url:
          type: string
          example: "https://google.com"
        publicationDate:
          type: string
          example: "1994-01-06"
        nonFacultyAuthors:
          type: string
          example: "Author 1, Author 2, Author 3"

  editFacultyPublicationInfoSource:
    properties:
        publicationId:
          type: string
          example: "1"
        title:
          type: string
          example: "Publication Title"
        citation:
          type: string
          example: "Journal published"
        url:
          type: string
          example: "https://www.journalsample.org"
        publicationDate:
          type: string
          example: "2020-06-01"
        nonFacultyAuthors:
          type: string
          example: "Author 1, Author 2, Author 3"

  addFacultyTSInfoSource:
    type: object
    properties:
        facultyId:
          type: string
          example: "2"
        title:
          type: string
          example: "MySQL Training"
        role:
          type: string
          example: "Speaker"
        dateFrom:
          type: string
          example: "2004-01-06"
        dateTo:
          type: string
          example: "2004-01-07"
        venue:
          type: string
          example: "UP Diliman"
        remarks:
          type: string
          example: "Remarks"
        proof:
          type: file
          example: "1G71O9UG2E2H6L1GLO25ULQ84C06YXM9G38.jpeg"

  addFacultyLicensureExamInfoSource:
    type: object
    properties:
        facultyId:
          type: string
          example: "2"
        examName:
          type: string
          example: "Chem Boards"
        examDate:
          type: string
          example: "2004-01-06"
        licenseNumber:
          type: string
          example: "2004-11774"
        rank:
          type: string
          example: "3"
        proof:
          type: file
          example: "1G71O9UG2E2H6L1GLO25ULQ84C06YXM9G38.jpeg"

  editFacultyLicensureExamInfoSource:
    type: object
    properties:
        licenseId:
          type: string
          example: "2"
        examName:
          type: string
          example: "Chem Boards"
        examDate:
          type: string
          example: "2004-01-06"
        licenseNumber:
          type: string
          example: "2004-11774"
        rank:
          type: string
          example: "3"
        proof:
          type: file
          example: "1G71O9UG2E2H6L1GLO25ULQ84C06YXM9G38.jpeg"
        status:
          type: string
          example: "Rejected"
        approverRemarks:
          type: string
          example: "Date provided does not match date in proof //only required if status=Rejected"

  editFacultyTrainingSeminarInfoSource:
    type: object
    properties:
        tsId:
          type: string
          example: "1"
        title:
          type: string
          example: "MySQL Training"
        role:
          type: string
          example: "Speaker"
        dateFrom:
          type: string
          example: "2004-01-06"
        dateTo:
          type: string
          example: "2004-01-07"
        venue:
          type: string
          example: "UP Diliman"
        remarks:
          type: string
          example: "Remarks"
        proof:
          type: file
          example: "1G71O9UG2E2H6L1GLO25ULQ84C06YXM9G38.jpeg"
        status:
          type: string
          example: "Rejected"
        approverRemarks:
          type: string
          example: "Date provided does not match date in proof //only required if status=Rejected"

  addFacultyResearchGrantInfoSource:
    properties:
        researchName:
          type: string
          example: "Research on Publications"
        granter:
          type: string
          example: "WHO"
        amount:
          type: string
          example: "1500000"
        projectedStart:
          type: string
          example: "1994-01-06"
        projectedEnd:
          type: string
          example: "1996-01-06"
        actualStart:
          type: string
          example: "1994-05-30"
        actualEnd:
          type: string
          example: "1997-12-15"
        researchProgress:
          type: string
          example: "Ongoing"
        nonFacultyResearchers:
          type: string
          example: "Author 1, Author 2, Author 3"
        
  editFacultyResearchGrantInfoSource:
    properties:
        researchId:
          type: string
          example: "1"
        researchName:
          type: string
          example: "Research on Publications"
        granter:
          type: string
          example: "WHO"
        amount:
          type: string
          example: "1500000"
        projectedStart:
          type: string
          example: "1994-01-06"
        projectedEnd:
          type: string
          example: "1996-01-06"
        actualStart:
          type: string
          example: "1994-05-30"
        actualEnd:
          type: string
          example: "1997-12-15"
        researchProgress:
          type: string
          example: "Ongoing"
        nonFacultyResearchers:
          type: string
          example: "Author 1, Author 2, Author 3"
  
  addFacultyLoadSource:
    type: object
    properties:
        facultyId:
          type: string
          example: "2"
        academicYear:
          type: string
          example: "AY 2020-2021"
        semester:
          type: string
          example: "1st Semester"
        subject:
          type: string
          example: "CMSC 123"
        section:
          type: string
          example: "MHI"
        setResults:
          type: file
          example: "BUTHRWIAKTL.csv"

  addFacultyEvaluationSource:
    properties:
        facultyId:
          type: string
          example: "2"
        academicYear:
          type: string
          example: "AY 2020-2021"
        evaluatee:
          type: string
          example: "14"
        evaluation:
          type: string
          example: "2.0"

  addStudentPersonalInfoSource:
    properties:
        lastName:
          type: string
          example: "Cristobal"
        firstName:
          type: string
          example: "Jodie"
        middleName:
          type: string
          example: "Pacay"
        dateOfBirth:
          type: string
          example: "1994-01-06"
        placeOfBirth:
          type: string
          example: "Manila"
        gender:
          type: string
          example: female
        permanentAddress:
          type: string
          example: "037 R. Higgins St., Brgy. 185, Pasay City"
        presentAddress:
          type: string
          example: "037 R. Higgins St., Brgy. 185, Pasay City"
        contactNumber:
          type: string
          example: "09123456789"
        email:
          type: string
          example: "jodie@email.com"
        civilStatus:
          type: string
          example: "single"
        religion:
          type: string
          example: "Catholic"
        emergencyContactPerson:
          type: string
          example: "Hilda Cristobal"
        emergencyContactNumber:
          type: string
          example: 09123456789
  
  addAlumniPersonalInfoSource:
    properties:
        lastName:
          type: string
          example: "Cristobal"
        firstName:
          type: string
          example: "Jodie"
        middleName:
          type: string
          example: "Pacay"
        contactNumber:
          type: string
          example: "09123456789"
        email:
          type: string
          example: "jodie@email.com"
  
  addAlumniWorkExpInfoSource:
    properties:
        alumniId:
          type: string
          example: "1"
        employerName:
          type: string
          example: "UPM"
        position:
          type: string
          example: "Instructor 1"

  ErrorResponse:
    type: object
    properties:
      success:
        type: boolean
        example: false
      message:
        type: string
        example: "Error message"
              
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
