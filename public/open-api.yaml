openapi: '3.0.0'
info:
  title: 'UPM DPSM HRIS'
  version: '1.0.0'
  description: >-
    Human Resource Information System for the University of the Philippines Manila Department of Physical Sciences and Mathematics.

paths:
  "/api/health":
    get:
      tags:
      - Monitor Health

      operationId: monitorHealth
      summary: Get health status of app
      description: Get health status of app
      responses:
        default:
          description: Health check response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Server is up!"

  "/api/user/add":
    post:
      summary: Create new user
      tags:
      - User Enrollment
      description: Register user
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/definitions/userAddSource"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    result:
                      type: string
                      example: "User enrolled successfully"
                    
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"

  "/api/login":
    post:
      summary: Create access token 
      tags:
      - Access Token
      description: Get access token
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/definitions/accessTokenSource"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    result:
                      type: string
                      example: "xxxxxxxxxxxxxxxxxxxxx.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
                    
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
  
  "/api/faculty/basic-info":
    get:
      summary: Get list of faculty
      tags:
      - Faculty - Basic Information
      description: Summary of faculty employee information
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    result:
                      type: array
                      example: 
                        [
                          {
                              "unitId": 1,
                              "unit": "Chemistry",
                              "faculty_units": [
                                  {
                                      "facultyId": 1,
                                      "faculty_personal_info": {
                                          "lastName": "Cristobal",
                                          "firstName": "Jodie",
                                          "middleName": "Pacay"
                                      }
                                  },
                                  {
                                      "facultyId": 2,
                                      "faculty_personal_info": {
                                          "lastName": "Palomar",
                                          "firstName": "Matthew",
                                          "middleName": "Pacay"
                                      }
                                  }
                              ]
                          },
                          {
                              "unitId": 2,
                              "unit": "Mathematical and Computing Sciences",
                              "faculty_units": [
                                  {
                                      "facultyId": 4,
                                      "faculty_personal_info": {
                                          "lastName": "Cristobal",
                                          "firstName": "Diane",
                                          "middleName": "Pacay"
                                      }
                                  },
                                  {
                                      "facultyId": 5,
                                      "faculty_personal_info": {
                                          "lastName": "Cristobal",
                                          "firstName": "Kenneth",
                                          "middleName": "Pacay"
                                      }
                                  }
                              ]
                          },
                          {
                              "unitId": 3,
                              "unit": "Physics and Geology",
                              "faculty_units": [
                                  {
                                      "facultyId": 6,
                                      "faculty_personal_info": {
                                          "lastName": "Cristobal",
                                          "firstName": "Lee",
                                          "middleName": "Pacay"
                                      }
                                  },
                                  {
                                      "facultyId": 8,
                                      "faculty_personal_info": {
                                          "lastName": "Palomar",
                                          "firstName": "Diane",
                                          "middleName": "Pacay"
                                      }
                                  }
                              ]
                          }
                      ]
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  
  "/api/faculty/basic-info/all":
    get:
      summary: Get complete information of all faculty
      tags:
      - Faculty - Basic Information
      description: Get all faculty information
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    result:
                      type: array
                      example: 
                        [
                          {
                            "facultyId": 4,
                            "userId": 2,
                            "lastName": "Cristobal",
                            "firstName": "Jodie",
                            "middleName": "Pacay",
                            "dateOfBirth": "1994-01-06",
                            "placeOfBirth": "Manila",
                            "gender": "female",
                            "permanentAddress": "037 R. Higgins St., Brgy. 185, Pasay City",
                            "presentAddress": "037 R. Higgins St., Brgy. 185, Pasay City",
                            "mobile": "09123456789",
                            "landline": "88161461",
                            "email": "jodie@email4.com",
                            "civilStatus": "single",
                            "religion": "Catholic",
                            "emergencyContactPerson": "Hilda Cristobal",
                            "emergencyContactNumber": "09123456789",
                            "faculty_employment_infos": [
                                {
                                    "position": "Prof 2",
                                    "startDate": "2004-01-06",
                                    "endDate": "2019-11-06",
                                    "faculty_unit": {
                                        "unit": "Mathematical and Computing Sciences"
                                    }
                                }
                            ],
                            "faculty_education_infos": [],
                            "faculty_work_exp_infos": []
                        },
                        {
                            "facultyId": 8,
                            "lastName": "Cristobal",
                            "firstName": "Lee",
                            "middleName": "Pacay",
                            "dateOfBirth": "1994-01-06",
                            "placeOfBirth": "Manila",
                            "gender": "female",
                            "permanentAddress": "037 R. Higgins St., Brgy. 185, Pasay City",
                            "presentAddress": "037 R. Higgins St., Brgy. 185, Pasay City",
                            "mobile": "09123456789",
                            "landline": "88161461",
                            "email": "jodie@email7.com",
                            "civilStatus": "single",
                            "religion": "Catholic",
                            "emergencyContactPerson": "Hilda Cristobal",
                            "emergencyContactNumber": "09123456789",
                            "faculty_employment_infos": [],
                            "faculty_education_infos": [],
                            "faculty_work_exp_infos": []
                        }
                      ]
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  
  "/api/faculty/basic-info/add/personal":
    post:
      summary: Add faculty personal info
      tags:
      - Faculty - Basic Information
      description: Add faculty personal info
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/definitions/addFacultyPersonalInfoSource"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Faculty added successfully"
                    result:
                      type: object
                      example: 
                        {
                          facultyId: "18"
                        }
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  
  "/api/faculty/basic-info/{facultyId}":
    get:
      summary: Get faculty personal info
      tags:
      - Faculty - Basic Information
      description: Get faculty personal info
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
          - name: facultyId
            in: path
            description: Faculty ID
            required: true
            style: simple
            explode: false
            schema:
              type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    result:
                      type: object
                      example: 
                        {
                          "facultyId": 2,
                          "lastName": "Cristobal",
                          "firstName": "Bod",
                          "middleName": "Pacay",
                          "dateOfBirth": "1994-01-06",
                          "placeOfBirth": "Manila",
                          "gender": "female",
                          "permanentAddress": "037 R. Higgins St., Brgy. 185, Pasay City",
                          "presentAddress": "037 R. Higgins St., Brgy. 185, Pasay City",
                          "mobile": "09123456789",
                          "landline": "88161461",
                          "email": "jodie@email2.com",
                          "civilStatus": "single",
                          "religion": "Catholic",
                          "emergencyContactPerson": "Hilda Cristobal",
                          "emergencyContactNumber": "09123456789",
                          "createdAt": "2020-10-30T16:00:00.000Z",
                          "updatedAt": "2020-10-30T16:00:00.000Z"
                        }
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  
  "/api/faculty/basic-info/{facultyId}/personal":
    put:
      summary: Edit faculty personal info
      tags:
      - Faculty - Basic Information
      description: Edit faculty personal info
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
          - name: facultyId
            in: path
            description: Faculty ID
            required: true
            style: simple
            explode: false
            schema:
              type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/definitions/editFacultyPersonalInfoSource"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Faculty personal information updated successfully"
                    result:
                      type: object
                      example: 
                        {
                          facultyId: "18"
                        }
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  
  "/api/faculty/basic-info/add/unit":
    post:
      summary: Add faculty unit
      tags:
      - Faculty - Basic Information
      description: Assign newly created faculty to a unit
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/definitions/addFacultyUnitSource"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Faculty unit information added successfully"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  
  "/api/faculty/basic-info/add/employment":
    post:
      summary: Add faculty employment info
      tags:
      - Faculty - Basic Information
      description: Add faculty employment info
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/definitions/addFacultyEmploymentInfoSource"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Faculty employment information added successfully"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  
  "/api/faculty/basic-info/{facultyId}/employment":
    get:
      summary: Get faculty employment info
      tags:
      - Faculty - Basic Information
      description: Get faculty employment info
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
          - name: facultyId
            in: path
            description: Faculty ID
            required: true
            style: simple
            explode: false
            schema:
              type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    result:
                      type: array
                      example: 
                        [
                          {
                            "employmentInfoId": 1,
                            "startDate": "2004-01-06",
                            "endDate": null,
                            "faculty_employment_position": {
                                "employmentType": "ftt",
                                "position": "Instructor 1"
                            }
                          },
                          {
                            "employmentInfoId": 8,
                            "startDate": "1994-01-06",
                            "endDate": "1995-01-06",
                            "faculty_employment_position": {
                                "employmentType": "ftt",
                                "position": "Assistant Professor 1"
                            }
                          }
                        ]
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  
  "/api/faculty/basic-info/add/education":
    post:
      summary: Add faculty education info
      tags:
      - Faculty - Basic Information
      description: Add faculty education info
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/definitions/addFacultyEducationInfoSource"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Faculty education information added successfully"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  
  "/api/faculty/basic-info/{facultyId}/education":
    get:
      summary: Get faculty education info
      tags:
      - Faculty - Basic Information
      description: Get faculty education info
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
          - name: facultyId
            in: path
            description: Faculty ID
            required: true
            style: simple
            explode: false
            schema:
              type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    result:
                      type: array
                      example: 
                        [
                          {
                            "educInfoId": 4,
                            "institutionSchool": "UPM",
                            "degreeCert": "BS CS",
                            "majorSpecialization": "HI",
                            "startDate": "1994-01-06",
                            "endDate": "1994-01-06",
                            "proof": null,
                            "status": "Ongoing",
                            "createdAt": "2020-11-02T19:48:15.000Z",
                            "updatedAt": "2020-11-02T19:48:15.000Z"
                          },
                          {
                            "educInfoId": 9,
                            "institutionSchool": "UPM",
                            "degreeCert": "BS AP",
                            "majorSpecialization": null,
                            "startDate": "1994-01-06",
                            "endDate": "1995-01-06",
                            "proof": "EOPOG2BJ01PZZITKDI9RTC1830APH6MNK9D.jpeg",
                            "status": "For Verification",
                            "createdAt": "2020-11-13T07:30:20.000Z",
                            "updatedAt": "2020-11-13T20:30:13.000Z"
                          }
                        ]
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
    put:
      summary: Edit faculty education info
      tags:
      - Faculty - Basic Information
      description: Edit faculty education info
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
          - name: facultyId
            in: path
            description: Faculty ID
            required: true
            style: simple
            explode: false
            schema:
              type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/definitions/editFacultyEducationInfoSource"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Faculty education information updated successfully"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
    delete:
      summary: Delete faculty education info
      tags:
      - Faculty - Basic Information
      description: Delete faculty education info
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
          - name: facultyId
            in: path
            description: Faculty ID
            required: true
            style: simple
            explode: false
            schema:
              type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                educInfoId:
                  type: string
                  example: "12"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Faculty education information deleted successfully"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
    
  "/api/faculty/basic-info/add/work-exp":
    post:
      summary: Add faculty work experience info
      tags:
      - Faculty - Basic Information
      description: Add faculty work experience info
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/definitions/addFacultyWorkExpInfoSource"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Faculty work experience information added successfully"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
 
  "/api/faculty/basic-info/{facultyId}/work-exp":
    get:
      summary: Get faculty work experience info
      tags:
      - Faculty - Basic Information
      description: Get faculty work experience info
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
          - name: facultyId
            in: path
            description: Faculty ID
            required: true
            style: simple
            explode: false
            schema:
              type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    result:
                      type: array
                      example: 
                        [
                          {
                            "workExpId": "1",
                            "employerName": "University of the Philippines Diliman",
                            "startDate": "2014-01-06",
                            "endDate": "2019-11-06",
                            "position": "Professor 1",
                            "description": "Description"
                          },
                          {
                            "workExpId": "2",
                            "employerName": "University of the Philippines Manila",
                            "startDate": "2004-01-06",
                            "endDate": "2013-11-06",
                            "position": "Instructor 1",
                            "description": null
                          }
                        ]
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
    put:
      summary: Edit faculty work experience info
      tags:
      - Faculty - Basic Information
      description: Edit faculty work experience info
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
          - name: facultyId
            in: path
            description: Faculty ID
            required: true
            style: simple
            explode: false
            schema:
              type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/definitions/editFacultyWorkExpInfoSource"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Faculty work experience information updated successfully"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
    delete:
      summary: Delete faculty work experience info
      tags:
      - Faculty - Basic Information
      description: Delete faculty work experience info
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
          - name: facultyId
            in: path
            description: Faculty ID
            required: true
            style: simple
            explode: false
            schema:
              type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                workExpId:
                  type: string
                  example: "12"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Faculty work experience information deleted successfully"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  
  "/api/faculty/accomplishment/add/public-service":
    post:
      summary: Add faculty public service info
      tags:
      - Faculty - Accomplishments
      description: Add faculty public service info
      consumes:
        - multipart/form-data
      produces:
        - application/json
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/definitions/addFacultyPublicServiceInfoSource"
      responses:
        "200":
          description: Success
          content:
              application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Faculty public service information added successfully"
                    result:
                      type: object
                      example: 
                        {
                          publicationId: "4"
                        }
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
 
  "/api/faculty/accomplishment/{facultyId}/public-service":
    get:
      summary: Get faculty public service info
      tags:
      - Faculty - Accomplishments
      description: Get faculty public service info
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
          - name: facultyId
            in: path
            description: Faculty ID
            required: true
            style: simple
            explode: false
            schema:
              type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    result:
                      type: array
                      example: 
                        [
                          {
                            "publicServiceId": 2,
                            "type": "Within UPM",
                            "position": "Organizer",
                            "organization": "Socomsci",
                            "description": "No desc",
                            "startDate": "2010-06-01",
                            "endDate": "2012-03-30",
                            "proof": "P3018.png",
                            "status": "For Verification"
                          },
                          {
                            "publicServiceId": 3,
                            "type": "Within UPM",
                            "position": "Organizers",
                            "organization": "Socomsci",
                            "description": "No desc",
                            "startDate": "2010-06-01",
                            "endDate": "2012-03-30",
                            "proof": "WHBJP.png",
                            "status": "For Verification"
                          }
                        ]
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
    put:
      summary: Edit faculty public service info
      tags:
      - Faculty - Accomplishments
      description: Edit faculty public service info
      consumes:
        - multipart/form-data
      produces:
        - multipart/form-data
      parameters:
          - name: facultyId
            in: path
            description: Faculty ID
            required: true
            style: simple
            explode: false
            schema:
              type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/definitions/editFacultyPublicServiceInfoSource"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Faculty public service information updated successfully"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
    delete:
      summary: Delete faculty public service info
      tags:
      - Faculty - Accomplishments
      description: Delete faculty public service info
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
          - name: facultyId
            in: path
            description: Faculty ID
            required: true
            style: simple
            explode: false
            schema:
              type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                publicServiceId:
                  type: string
                  example: "12"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Faculty public service information deleted successfully"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  
  "/api/faculty/accomplishment/add/publication":
    post:
      summary: Add faculty publication info
      tags:
      - Faculty - Accomplishments
      description: Add faculty publication info
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/definitions/addFacultyPublicationInfoSource"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Faculty publication information added successfully"
                    result:
                      type: object
                      example: 
                        {
                          publicationId: "4"
                        }
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
   
  "/api/faculty/accomplishment/add/publisher":
    post:
      summary: Add faculty publisher info
      tags:
      - Faculty - Accomplishments
      description: Bulk add faculty publisher info
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              example:
                [
                  {
                    "facultyId": "9",
                    "publicationId": "4",
                    "status": "Pending"
                  },
                  {
                    "facultyId": "10",
                    "publicationId": "4",
                    "status": "Pending"
                  },
                  {
                    "facultyId": "11",
                    "publicationId": "4",
                    "status": "Pending"
                  }
                ]
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Faculty publisher information added successfully"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  
  "/api/faculty/accomplishment/{facultyId}/publication":
    get:
      summary: Get faculty publication info
      tags:
      - Faculty - Accomplishments
      description: Get faculty publication info
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
          - name: facultyId
            in: path
            description: Faculty ID
            required: true
            style: simple
            explode: false
            schema:
              type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    result:
                      type: array
                      example: 
                        [
                          {
                            "publicationId": 5,
                            "title": "new publication title",
                            "journal": "journal of publication",
                            "url": null,
                            "publicationDate": "2019-11-06",
                            "nonFacultyAuthors": "Author 1, Author 2, Author 3",
                            "faculty_publishers": [
                              {
                                "facultyId": 9,
                                "proof": null,
                                "status": "pending",
                                "faculty_personal_info": {
                                    "lastName": "Cristobal",
                                    "firstName": "Aji",
                                    "middleName": "Pacay"
                                }
                              },
                              {
                                "facultyId": 10,
                                "proof": null,
                                "status": "pending",
                                "faculty_personal_info": {
                                    "lastName": "Cristobal",
                                    "firstName": "Sarah",
                                    "middleName": "Pacay"
                                }
                              },
                              {
                                "facultyId": 8,
                                "proof": null,
                                "status": "pending",
                                "faculty_personal_info": {
                                    "lastName": "Palomar",
                                    "firstName": "Diane",
                                    "middleName": "Pacay"
                                }
                              }
                            ]
                          },
                          {
                            "publicationId": 4,
                            "title": "publication title",
                            "journal": "journal of publication",
                            "url": null,
                            "publicationDate": "2011-11-06",
                            "nonFacultyAuthors": "Author 1, Author 2, Author 3",
                            "faculty_publishers": [
                              {
                                "facultyId": 9,
                                "proof": null,
                                "status": "Pending",
                                "faculty_personal_info": {
                                    "lastName": "Cristobal",
                                    "firstName": "Aji",
                                    "middleName": "Pacay"
                                }
                              },
                              {
                                "facultyId": 10,
                                "proof": null,
                                "status": "Pending",
                                "faculty_personal_info": {
                                    "lastName": "Cristobal",
                                    "firstName": "Sarah",
                                    "middleName": "Pacay"
                                }
                              },
                              {
                                "facultyId": 8,
                                "proof": null,
                                "status": "Pending",
                                "faculty_personal_info": {
                                    "lastName": "Palomar",
                                    "firstName": "Diane",
                                    "middleName": "Pacay"
                                }
                              }
                            ]
                          }
                        ]
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
    put:
      summary: Edit faculty publication info
      tags:
      - Faculty - Accomplishments
      description: Edit faculty publication info
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
          - name: facultyId
            in: path
            description: Faculty ID
            required: true
            style: simple
            explode: false
            schema:
              type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/definitions/editFacultyPublicationInfoSource"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Faculty publication information updated successfully"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []

  "/api/faculty/accomplishment/{facultyId}/publisher":
    put:
      summary: Edit publisher info
      tags:
      - Faculty - Accomplishments
      description: Edit publisher info
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
          - name: facultyId
            in: path
            description: Faculty ID
            required: true
            style: simple
            explode: false
            schema:
              type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/definitions/editFacultyPublisherInfoSource"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Faculty publisher information updated successfully"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
    delete:
      summary: Delete faculty publisher info
      tags:
      - Faculty - Accomplishments
      description: Delete faculty publisher info
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
          - name: facultyId
            in: path
            description: Faculty ID
            required: true
            style: simple
            explode: false
            schema:
              type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                publicationId:
                  type: string
                  example: "12"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Faculty publisher information deleted successfully"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  
  "/api/faculty/accomplishment/add/training-seminar":
    post:
      summary: Add faculty training/seminar info
      tags:
      - Faculty - Accomplishments
      description: Add faculty training/seminar info
      consumes:
        - multipart/form-data
      produces:
        - application/json
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/definitions/addFacultyTSInfoSource"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Faculty training/seminar information added successfully"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  
  "/api/faculty/accomplishment/{facultyId}/training-seminar":
    get:
      summary: Get faculty training/seminar info
      tags:
      - Faculty - Accomplishments
      description: Get faculty training/seminar info
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
          - name: facultyId
            in: path
            description: Faculty ID
            required: true
            style: simple
            explode: false
            schema:
              type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    result:
                      type: array
                      example: 
                        [
                          {
                            "tsId": 19,
                            "role": "Attendee",
                            "title": "MySQL Training",
                            "dateFrom": "2019-06-29",
                            "dateTo": "2019-06-27",
                            "venue": "UP ITDC",
                            "proof": "65KG9KD3A4OXQEQM0TEJJH1QGHP78D16FBW.jpeg",
                            "status": "For Verification"
                          },
                          {
                            "tsId": 18,
                            "role": "Speaker",
                            "title": "MySQL Training",
                            "dateFrom": "2019-06-28",
                            "dateTo": "2019-06-27",
                            "venue": "UP ITDC",
                            "proof": "TDWCCIZLOK0UAFX713LYM866P7G8AWQSWEL.jpeg",
                            "status": "For Verification"
                          }
                        ]
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  
  "/api/faculty/accomplishment/add/licensure-exam":
    post:
      summary: Add faculty licensure exam info
      tags:
      - Faculty - Accomplishments
      description: Add faculty licensure exam info
      consumes:
        - multipart/form-data
      produces:
        - application/json
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/definitions/addFacultyLicensureExamInfoSource"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Faculty licensure exam information added successfully"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  
  "/api/faculty/accomplishment/{facultyId}/licensure-exam":
    get:
      summary: Get faculty licensure exam info
      tags:
      - Faculty - Accomplishments
      description: Get faculty licensure exam info
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
          - name: facultyId
            in: path
            description: Faculty ID
            required: true
            style: simple
            explode: false
            schema:
              type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    result:
                      type: array
                      example: 
                        [
                          {
                            "licenseId": 1,
                            "examName": "PLE",
                            "examDate": "2019-06-29",
                            "licenseNumber": "UP ITDC",
                            "rank": null,
                            "proof": "",
                            "status": "Pending"
                          },
                          {
                            "licenseId": 2,
                            "examName": "Chem boards",
                            "examDate": "2019-06-29",
                            "licenseNumber": "UP ITDC",
                            "rank": null,
                            "proof": "5XH4DFNUPBJEOB79MH8E5QX2RKU.pdf",
                            "status": "For Verification"
                          }
                        ]
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  
  "/api/faculty/accomplishment/add/research-grant":
    post:
      summary: Add faculty research grant info
      tags:
      - Faculty - Accomplishments
      description: Add faculty research grant info
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/definitions/addFacultyResearchGrantInfoSource"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Faculty researchGrant information added successfully"
                    result:
                      type: object
                      example: 
                        {
                          researchGrantId: "4"
                        }
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  
  "/api/faculty/accomplishment/add/researcher":
    post:
      summary: Add faculty researcher info
      tags:
      - Faculty - Accomplishments
      description: Bulk add faculty researcher info
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              example:
                [
                  {
                    "facultyId": "9",
                    "researchId": "1",
                    "status": "Ongoing"
                  },
                  {
                    "facultyId": "10",
                    "researchId": "1",
                    "status": "Ongoing"
                  },
                  {
                    "facultyId": "8",
                    "researchId": "1",
                    "status": "Ongoing"
                  }
                ]
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Faculty researcher information added successfully"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  
  "/api/faculty/accomplishment/{facultyId}/research-grant":
    get:
      summary: Get faculty research grant info
      tags:
      - Faculty - Accomplishments
      description: Get faculty research grant info
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
          - name: facultyId
            in: path
            description: Faculty ID
            required: true
            style: simple
            explode: false
            schema:
              type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    result:
                      type: array
                      example: 
                        [
                          {
                            "researchGrantId": 1,
                            "researchName": "new publication title",
                            "granter": "journal of publication",
                            "amount": 1000000,
                            "projectedStart": "2019-11-06",
                            "projectedEnd": "2019-11-06",
                            "actualStart": "2019-11-06",
                            "actualEnd": "2019-11-06",
                            "researchProgress": "Ongoing",
                            "nonFacultyResearchers": "Author 1, Author 2, Author 3",
                            "faculty_researchers": [
                              {
                                "facultyId": 9,
                                "proof": null,
                                "status": "Ongoing",
                                "faculty_personal_info": {
                                    "lastName": "Cristobal",
                                    "firstName": "Aji",
                                    "middleName": "Pacay"
                                }
                              },
                              {
                                "facultyId": 10,
                                "proof": null,
                                "status": "Ongoing",
                                "faculty_personal_info": {
                                    "lastName": "Cristobal",
                                    "firstName": "Sarah",
                                    "middleName": "Pacay"
                                }
                              },
                              {
                                "facultyId": 8,
                                "proof": null,
                                "status": "Ongoing",
                                "faculty_personal_info": {
                                    "lastName": "Palomar",
                                    "firstName": "Diane",
                                    "middleName": "Pacay"
                                }
                              }
                            ]
                          }
                        ]
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  
  "/api/faculty/load":
    post:
      summary: Add faculty load
      tags:
      - Faculty - Load
      description: Add faculty load information
      consumes:
        - multipart/form-data
      produces:
        - application/json
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/definitions/addFacultyLoadSource"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Faculty class record added successfully"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  
  "/api/faculty/evaluation":
    post:
      summary: Add faculty peer evaluation
      tags:
      - Faculty - Peer Evaluation
      description: Add faculty peer evaluation
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/definitions/addFacultyEvaluationSource"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Faculty peer evaluation added successfully"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  
  "/api/student/add/personal":
    post:
      summary: Add student personal info
      tags:
      - Student
      description: Add student personal info
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/definitions/addStudentPersonalInfoSource"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Student added successfully"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  
  "/api/alumni/add/personal":
    post:
      summary: Add alumni personal info
      tags:
      - Alumni
      description: Add alumni personal info
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/definitions/addAlumniPersonalInfoSource"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Alumni added successfully"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  
  "/api/alumni/add/work-exp":
    post:
      summary: Add alumni work experience info
      tags:
      - Alumni
      description: Add alumni work experience info
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/definitions/addAlumniWorkExpInfoSource"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Alumni work experience information added successfully"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  
  "/api/download/{filename}":
    get:
      summary: Download file
      tags:
      - Download
      description: Download file
      parameters:
          - name: filename
            in: path
            description: File Name
            required: true
            style: simple
            explode: false
            schema:
              type: string
      responses:
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  
definitions:
  userAddSource:
    properties:
        role:
          type: string
          example: "1"
        upemail:
          type: string
          example: "jpcristobal1@upm.edu.ph"
        password:
          type: string
          example: "password"
        personalInfo:
          type: object
          example: {
            "lastName": "Cristobal",
            "firstName": "Jodie",
            "middleName": "Pacay",
            "dateOfBirth": "1994-01-06",
            "placeOfBirth": "Manila",
            "gender": "Female",
            "permanentAddress": "037 R. Higgins St., Brgy. 185, Pasay City",
            "presentAddress": "037 R. Higgins St., Brgy. 185, Pasay City",
            "mobile": "09123456789",
            "landline": "88161467",
            "email": "jodielee@email.com",
            "civilStatus": "single",
            "religion": "Catholic",
            "emergencyContactPerson": "Hilda Cristobal",
            "emergencyContactNumber": "09123456789"
          }

  accessTokenSource:
    properties:
        upemail:
          type: string
          example: "username"
        password:
          type: string
          example: "password"

  addFacultyPersonalInfoSource:
    properties:
        userId:
          type: string
          example: "2"
        lastName:
          type: string
          example: "Cristobal"
        firstName:
          type: string
          example: "Jodie"
        middleName:
          type: string
          example: "Pacay"
        suffix:
          type: string
          example: "III"
        dateOfBirth:
          type: string
          example: "1994-01-06"
        placeOfBirth:
          type: string
          example: "Manila"
        gender:
          type: string
          example: female
        permanentAddress:
          type: string
          example: "037 R. Higgins St., Brgy. 185, Pasay City"
        presentAddress:
          type: string
          example: "037 R. Higgins St., Brgy. 185, Pasay City"
        mobile:
          type: string
          example: "09123456789"
        landline:
          type: string
          example: "88161467"
        email:
          type: string
          example: "jodie@email.com"
        civilStatus:
          type: string
          example: "single"
        religion:
          type: string
          example: "Catholic"
        emergencyContactPerson:
          type: string
          example: "Hilda Cristobal"
        emergencyContactNumber:
          type: string
          example: 09123456789

  addFacultyEmploymentInfoSource:
    properties:
        facultyId:
          type: string
          example: "1"
        position:
          type: string
          example: "20"
        startDate:
          type: string
          example: "1994-01-06"
        endDate:
          type: string
          example: "1994-01-06"

  addFacultyUnitSource:
    properties:
        facultyId:
          type: string
          example: "1"
        unitId:
          type: string
          example: "1"

  addFacultyEducationInfoSource:
    properties:
        facultyId:
          type: string
          example: "1"
        institutionSchool:
          type: string
          example: "UPM"
        degreeType:
          type: string
          example: "AA/AS/BA/BS/MA/MS/MD/PhD"
        degreeCert:
          type: string
          example: "Computer Science"
        majorSpecialization:
          type: string
          example: "HI"
        startDate:
          type: string
          example: "1994-01-06"
        endDate:
          type: string
          example: "1994-01-06"
        proof:
          type: string
          format: binary
          example: "J5IO84K233ZU6HKPK5RAATHK98W7I1Y2069.jpeg"
        status:
          type: string
          example: "For Verification"

  addFacultyWorkExpInfoSource:
    properties:
        facultyId:
          type: string
          example: "1"
        employerName:
          type: string
          example: "UPM"
        position:
          type: string
          example: "Instructor 1"
        startDate:
          type: string
          example: "1994-01-06"
        endDate:
          type: string
          example: "1995-01-06"
        description:
          type: string
          example: "Taught elementary calculus for 3 years"

  editFacultyPersonalInfoSource:
    properties:
        lastName:
          type: string
          example: "Cristobal"
        middleName:
          type: string
          example: "Pacay"
        suffix:
          type: string
          example: "Jr."
        permanentAddress:
          type: string
          example: "037 R. Higgins St., Brgy. 185, Pasay City"
        presentAddress:
          type: string
          example: "037 R. Higgins St., Brgy. 185, Pasay City"
        mobile:
          type: string
          example: "09123456789"
        landline:
          type: string
          example: "88161467"
        email:
          type: string
          example: "jodie@email.com"
        civilStatus:
          type: string
          example: "single"
        religion:
          type: string
          example: "Catholic"
        emergencyContactPerson:
          type: string
          example: "Hilda Cristobal"
        emergencyContactNumber:
          type: string
          example: 09123456789

  editFacultyEducationInfoSource:
    properties:
        educInfoId:
          type: string
          example: "1"
        institutionSchool: 
          type: string
          example: "University of the Philippines Manila"
        degreeType:
          type: string
          example: "AA/AS/BA/BS/MA/MS/MD/PhD"
        degreeCert: 
          type: string
          example: "Computer Science"
        majorSpecialization: 
          type: string
          example: "Health Informatics"
        startDate: 
          type: string
          example: "2011-06-01"
        endDate:
          type: string
          example: "2016-01-06"
        proof:
          type: string
          format: binary
          example: "J5IO84K233ZU6HKPK5RAATHK98W7I1Y2069.jpeg"

  editFacultyWorkExpInfoSource:
    properties:
        workExpId:
          type: string
          example: "1"
        employerName:
          type: string
          example: "UPM"
        position:
          type: string
          example: "Instructor 1"
        startDate:
          type: string
          example: "1994-01-06"
        endDate:
          type: string
          example: "1995-01-06"
        description:
          type: string
          example: "Taught elementary calculus for 3 years"

  addFacultyPublicServiceInfoSource:
    properties:
        facultyId:
          type: string
          example: "1"
        type:
          type: string
          example: "Within UPM/Profession/Nation/World"
        position:
          type: string
          example: "Organizer"
        organization:
          type: string
          example: "Socomsci"
        description:
          type: string
          example: "Organized SOCOMSCI"
        startDate:
          type: string
          example: "2020-06-01"
        endDate:
          type: string
          example: "2020-07-01"
        proof:
          type: string
          example: "5XH4DFNUPBJEOB79MH8E5QX2RKU.pdf"

  editFacultyPublicServiceInfoSource:
    properties:
        publicServiceId:
          type: string
          example: "1"
        type:
          type: string
          example: "Within UPM/Profession/Nation/World"
        position:
          type: string
          example: "Organizer"
        organization:
          type: string
          example: "Socomsci"
        description:
          type: string
          example: "Organized SOCOMSCI"
        startDate:
          type: string
          example: "2020-06-01"
        endDate:
          type: string
          example: "2020-07-01"
        proof:
          type: string
          example: "5XH4DFNUPBJEOB79MH8E5QX2RKU.pdf"

  addFacultyPublicationInfoSource:
    properties:
        title:
          type: string
          example: "Publication"
        journal:
          type: string
          example: "Publication"
        url:
          type: string
          example: "https://google.com"
        publicationDate:
          type: string
          example: "1994-01-06"
        nonFacultyAuthors:
          type: string
          example: "Author 1, Author 2, Author 3"

  editFacultyPublicationInfoSource:
    properties:
        publicationId:
          type: string
          example: "1"
        title:
          type: string
          example: "Publication Title"
        journal:
          type: string
          example: "Journal published"
        url:
          type: string
          example: "https://www.journalsample.org"
        publicationDate:
          type: string
          example: "2020-06-01"
        nonFacultyAuthors:
          type: string
          example: "Author 1, Author 2, Author 3"
        proof:
          type: string
          example: "5XH4DFNUPBJEOB79MH8E5QX2RKU.pdf"

  editFacultyPublisherInfoSource:
    properties:
        publicationId:
          type: string
          example: "1"
        proof:
          type: string
          format: binary
          example: "J5IO84K233ZU6HKPK5RAATHK98W7I1Y2069.jpeg"
        status:
          type: string
          example: "For Verification"

  addFacultyTSInfoSource:
    properties:
        facultyId:
          type: string
          example: "2"
        title:
          type: string
          example: "MySQL Training"
        role:
          type: string
          example: "Speaker"
        dateFrom:
          type: string
          example: "2004-01-06"
        dateTo:
          type: string
          example: "2004-01-07"
        venue:
          type: string
          example: "UP Diliman"
        proof:
          type: string
          example: "1G71O9UG2E2H6L1GLO25ULQ84C06YXM9G38.jpeg"

  addFacultyLicensureExamInfoSource:
    properties:
        facultyId:
          type: string
          example: "2"
        examName:
          type: string
          example: "Chem Boards"
        examDate:
          type: string
          example: "2004-01-06"
        licenseNumber:
          type: string
          example: "2004-11774"
        rank:
          type: string
          example: "3"
        proof:
          type: string
          example: "1G71O9UG2E2H6L1GLO25ULQ84C06YXM9G38.jpeg"

  addFacultyResearchGrantInfoSource:
    properties:
        researchName:
          type: string
          example: "Research on Publications"
        granter:
          type: string
          example: "WHO"
        amount:
          type: string
          example: "1500000"
        projectedStart:
          type: string
          example: "1994-01-06"
        projectedEnd:
          type: string
          example: "1996-01-06"
        actualStart:
          type: string
          example: "1994-05-30"
        actualEnd:
          type: string
          example: "1997-12-15"
        researchProgress:
          type: string
          example: "Ongoing"
        nonFacultyResearchers:
          type: string
          example: "Author 1, Author 2, Author 3"

  addFacultyLoadSource:
    properties:
        facultyId:
          type: string
          example: "2"
        academicYear:
          type: string
          example: "1st Semester, AY 2020-2021"
        subject:
          type: string
          example: "CMSC 123"
        section:
          type: string
          example: "MHI"
        classRecord:
          type: string
          example: "BUTHRWIAKTL.csv"

  addFacultyEvaluationSource:
    properties:
        facultyId:
          type: string
          example: "2"
        academicYear:
          type: string
          example: "AY 2020-2021"
        evaluatee:
          type: string
          example: "14"
        evaluation:
          type: string
          example: "2.0"

  addStudentPersonalInfoSource:
    properties:
        lastName:
          type: string
          example: "Cristobal"
        firstName:
          type: string
          example: "Jodie"
        middleName:
          type: string
          example: "Pacay"
        dateOfBirth:
          type: string
          example: "1994-01-06"
        placeOfBirth:
          type: string
          example: "Manila"
        gender:
          type: string
          example: female
        permanentAddress:
          type: string
          example: "037 R. Higgins St., Brgy. 185, Pasay City"
        presentAddress:
          type: string
          example: "037 R. Higgins St., Brgy. 185, Pasay City"
        contactNumber:
          type: string
          example: "09123456789"
        email:
          type: string
          example: "jodie@email.com"
        civilStatus:
          type: string
          example: "single"
        religion:
          type: string
          example: "Catholic"
        emergencyContactPerson:
          type: string
          example: "Hilda Cristobal"
        emergencyContactNumber:
          type: string
          example: 09123456789
  
  addAlumniPersonalInfoSource:
    properties:
        lastName:
          type: string
          example: "Cristobal"
        firstName:
          type: string
          example: "Jodie"
        middleName:
          type: string
          example: "Pacay"
        contactNumber:
          type: string
          example: "09123456789"
        email:
          type: string
          example: "jodie@email.com"
  
  addAlumniWorkExpInfoSource:
    properties:
        alumniId:
          type: string
          example: "1"
        employerName:
          type: string
          example: "UPM"
        position:
          type: string
          example: "Instructor 1"

  ErrorResponse:
    type: object
    properties:
      success:
        type: boolean
        example: false
      message:
        type: string
        example: "Error message"
              
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
